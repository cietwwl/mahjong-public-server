// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Entity.proto

package com.randioo.mahjong_public_server.protocol;

public final class Entity {
  private Entity() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum GameType
      implements com.google.protobuf.ProtocolMessageEnum {
    GAME_TYPE_MATCH(0, 1),
    GAME_TYPE_FRIEND(1, 2),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static GameType valueOf(int value) {
      switch (value) {
        case 1: return GAME_TYPE_MATCH;
        case 2: return GAME_TYPE_FRIEND;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<GameType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<GameType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GameType>() {
            public GameType findValueByNumber(int number) {
              return GameType.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Entity.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final GameType[] VALUES = {
      GAME_TYPE_MATCH, GAME_TYPE_FRIEND, 
    };
    public static GameType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private GameType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      com.randioo.mahjong_public_server.protocol.Entity.getDescriptor();
    }
    
    // @@protoc_insertion_point(enum_scope:com.randioo.mahjong_public_server.protocol.GameType)
  }
  
  public enum GameState
      implements com.google.protobuf.ProtocolMessageEnum {
    GAME_STATE_PREPARE(0, 1),
    GAME_START_START(1, 2),
    GAME_START_END(2, 3),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static GameState valueOf(int value) {
      switch (value) {
        case 1: return GAME_STATE_PREPARE;
        case 2: return GAME_START_START;
        case 3: return GAME_START_END;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<GameState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<GameState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GameState>() {
            public GameState findValueByNumber(int number) {
              return GameState.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Entity.getDescriptor().getEnumTypes().get(1);
    }
    
    private static final GameState[] VALUES = {
      GAME_STATE_PREPARE, GAME_START_START, GAME_START_END, 
    };
    public static GameState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private GameState(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      com.randioo.mahjong_public_server.protocol.Entity.getDescriptor();
    }
    
    // @@protoc_insertion_point(enum_scope:com.randioo.mahjong_public_server.protocol.GameState)
  }
  
  public static final class RoleData extends
      com.google.protobuf.GeneratedMessage {
    // Use RoleData.newBuilder() to construct.
    private RoleData() {
      initFields();
    }
    private RoleData(boolean noInit) {}
    
    private static final RoleData defaultInstance;
    public static RoleData getDefaultInstance() {
      return defaultInstance;
    }
    
    public RoleData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_RoleData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_RoleData_fieldAccessorTable;
    }
    
    // optional int32 roleId = 1;
    public static final int ROLEID_FIELD_NUMBER = 1;
    private boolean hasRoleId;
    private int roleId_ = 0;
    public boolean hasRoleId() { return hasRoleId; }
    public int getRoleId() { return roleId_; }
    
    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional int32 money = 3;
    public static final int MONEY_FIELD_NUMBER = 3;
    private boolean hasMoney;
    private int money_ = 0;
    public boolean hasMoney() { return hasMoney; }
    public int getMoney() { return money_; }
    
    // optional int32 volume = 4;
    public static final int VOLUME_FIELD_NUMBER = 4;
    private boolean hasVolume;
    private int volume_ = 0;
    public boolean hasVolume() { return hasVolume; }
    public int getVolume() { return volume_; }
    
    // optional int32 musicVolume = 5;
    public static final int MUSICVOLUME_FIELD_NUMBER = 5;
    private boolean hasMusicVolume;
    private int musicVolume_ = 0;
    public boolean hasMusicVolume() { return hasMusicVolume; }
    public int getMusicVolume() { return musicVolume_; }
    
    // optional string headImgUrl = 6;
    public static final int HEADIMGURL_FIELD_NUMBER = 6;
    private boolean hasHeadImgUrl;
    private java.lang.String headImgUrl_ = "";
    public boolean hasHeadImgUrl() { return hasHeadImgUrl; }
    public java.lang.String getHeadImgUrl() { return headImgUrl_; }
    
    // optional int32 randiooMoney = 7;
    public static final int RANDIOOMONEY_FIELD_NUMBER = 7;
    private boolean hasRandiooMoney;
    private int randiooMoney_ = 0;
    public boolean hasRandiooMoney() { return hasRandiooMoney; }
    public int getRandiooMoney() { return randiooMoney_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasRoleId()) {
        output.writeInt32(1, getRoleId());
      }
      if (hasName()) {
        output.writeString(2, getName());
      }
      if (hasMoney()) {
        output.writeInt32(3, getMoney());
      }
      if (hasVolume()) {
        output.writeInt32(4, getVolume());
      }
      if (hasMusicVolume()) {
        output.writeInt32(5, getMusicVolume());
      }
      if (hasHeadImgUrl()) {
        output.writeString(6, getHeadImgUrl());
      }
      if (hasRandiooMoney()) {
        output.writeInt32(7, getRandiooMoney());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasRoleId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getRoleId());
      }
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getName());
      }
      if (hasMoney()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getMoney());
      }
      if (hasVolume()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getVolume());
      }
      if (hasMusicVolume()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getMusicVolume());
      }
      if (hasHeadImgUrl()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getHeadImgUrl());
      }
      if (hasRandiooMoney()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, getRandiooMoney());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.mahjong_public_server.protocol.Entity.RoleData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.RoleData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.RoleData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.RoleData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.RoleData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.RoleData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.RoleData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.RoleData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.RoleData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.RoleData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.mahjong_public_server.protocol.Entity.RoleData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.mahjong_public_server.protocol.Entity.RoleData result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Entity.RoleData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.mahjong_public_server.protocol.Entity.RoleData();
        return builder;
      }
      
      protected com.randioo.mahjong_public_server.protocol.Entity.RoleData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.mahjong_public_server.protocol.Entity.RoleData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.RoleData.getDescriptor();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.RoleData getDefaultInstanceForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.RoleData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.mahjong_public_server.protocol.Entity.RoleData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.mahjong_public_server.protocol.Entity.RoleData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.RoleData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.mahjong_public_server.protocol.Entity.RoleData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.mahjong_public_server.protocol.Entity.RoleData) {
          return mergeFrom((com.randioo.mahjong_public_server.protocol.Entity.RoleData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.mahjong_public_server.protocol.Entity.RoleData other) {
        if (other == com.randioo.mahjong_public_server.protocol.Entity.RoleData.getDefaultInstance()) return this;
        if (other.hasRoleId()) {
          setRoleId(other.getRoleId());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasMoney()) {
          setMoney(other.getMoney());
        }
        if (other.hasVolume()) {
          setVolume(other.getVolume());
        }
        if (other.hasMusicVolume()) {
          setMusicVolume(other.getMusicVolume());
        }
        if (other.hasHeadImgUrl()) {
          setHeadImgUrl(other.getHeadImgUrl());
        }
        if (other.hasRandiooMoney()) {
          setRandiooMoney(other.getRandiooMoney());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setRoleId(input.readInt32());
              break;
            }
            case 18: {
              setName(input.readString());
              break;
            }
            case 24: {
              setMoney(input.readInt32());
              break;
            }
            case 32: {
              setVolume(input.readInt32());
              break;
            }
            case 40: {
              setMusicVolume(input.readInt32());
              break;
            }
            case 50: {
              setHeadImgUrl(input.readString());
              break;
            }
            case 56: {
              setRandiooMoney(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional int32 roleId = 1;
      public boolean hasRoleId() {
        return result.hasRoleId();
      }
      public int getRoleId() {
        return result.getRoleId();
      }
      public Builder setRoleId(int value) {
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder clearRoleId() {
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      // optional string name = 2;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional int32 money = 3;
      public boolean hasMoney() {
        return result.hasMoney();
      }
      public int getMoney() {
        return result.getMoney();
      }
      public Builder setMoney(int value) {
        result.hasMoney = true;
        result.money_ = value;
        return this;
      }
      public Builder clearMoney() {
        result.hasMoney = false;
        result.money_ = 0;
        return this;
      }
      
      // optional int32 volume = 4;
      public boolean hasVolume() {
        return result.hasVolume();
      }
      public int getVolume() {
        return result.getVolume();
      }
      public Builder setVolume(int value) {
        result.hasVolume = true;
        result.volume_ = value;
        return this;
      }
      public Builder clearVolume() {
        result.hasVolume = false;
        result.volume_ = 0;
        return this;
      }
      
      // optional int32 musicVolume = 5;
      public boolean hasMusicVolume() {
        return result.hasMusicVolume();
      }
      public int getMusicVolume() {
        return result.getMusicVolume();
      }
      public Builder setMusicVolume(int value) {
        result.hasMusicVolume = true;
        result.musicVolume_ = value;
        return this;
      }
      public Builder clearMusicVolume() {
        result.hasMusicVolume = false;
        result.musicVolume_ = 0;
        return this;
      }
      
      // optional string headImgUrl = 6;
      public boolean hasHeadImgUrl() {
        return result.hasHeadImgUrl();
      }
      public java.lang.String getHeadImgUrl() {
        return result.getHeadImgUrl();
      }
      public Builder setHeadImgUrl(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasHeadImgUrl = true;
        result.headImgUrl_ = value;
        return this;
      }
      public Builder clearHeadImgUrl() {
        result.hasHeadImgUrl = false;
        result.headImgUrl_ = getDefaultInstance().getHeadImgUrl();
        return this;
      }
      
      // optional int32 randiooMoney = 7;
      public boolean hasRandiooMoney() {
        return result.hasRandiooMoney();
      }
      public int getRandiooMoney() {
        return result.getRandiooMoney();
      }
      public Builder setRandiooMoney(int value) {
        result.hasRandiooMoney = true;
        result.randiooMoney_ = value;
        return this;
      }
      public Builder clearRandiooMoney() {
        result.hasRandiooMoney = false;
        result.randiooMoney_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.RoleData)
    }
    
    static {
      defaultInstance = new RoleData(true);
      com.randioo.mahjong_public_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.RoleData)
  }
  
  public static final class GameConfig extends
      com.google.protobuf.GeneratedMessage {
    // Use GameConfig.newBuilder() to construct.
    private GameConfig() {
      initFields();
    }
    private GameConfig(boolean noInit) {}
    
    private static final GameConfig defaultInstance;
    public static GameConfig getDefaultInstance() {
      return defaultInstance;
    }
    
    public GameConfig getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_GameConfig_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_GameConfig_fieldAccessorTable;
    }
    
    // optional int32 raceType = 1;
    public static final int RACETYPE_FIELD_NUMBER = 1;
    private boolean hasRaceType;
    private int raceType_ = 0;
    public boolean hasRaceType() { return hasRaceType; }
    public int getRaceType() { return raceType_; }
    
    // optional int32 maxCount = 2;
    public static final int MAXCOUNT_FIELD_NUMBER = 2;
    private boolean hasMaxCount;
    private int maxCount_ = 0;
    public boolean hasMaxCount() { return hasMaxCount; }
    public int getMaxCount() { return maxCount_; }
    
    // optional int32 gangScore = 3;
    public static final int GANGSCORE_FIELD_NUMBER = 3;
    private boolean hasGangScore;
    private int gangScore_ = 0;
    public boolean hasGangScore() { return hasGangScore; }
    public int getGangScore() { return gangScore_; }
    
    // optional bool zhuahu = 4;
    public static final int ZHUAHU_FIELD_NUMBER = 4;
    private boolean hasZhuahu;
    private boolean zhuahu_ = false;
    public boolean hasZhuahu() { return hasZhuahu; }
    public boolean getZhuahu() { return zhuahu_; }
    
    // optional int32 endCatchCount = 5;
    public static final int ENDCATCHCOUNT_FIELD_NUMBER = 5;
    private boolean hasEndCatchCount;
    private int endCatchCount_ = 0;
    public boolean hasEndCatchCount() { return hasEndCatchCount; }
    public int getEndCatchCount() { return endCatchCount_; }
    
    // optional int32 catchScore = 6;
    public static final int CATCHSCORE_FIELD_NUMBER = 6;
    private boolean hasCatchScore;
    private int catchScore_ = 0;
    public boolean hasCatchScore() { return hasCatchScore; }
    public int getCatchScore() { return catchScore_; }
    
    // optional bool gangkai = 7;
    public static final int GANGKAI_FIELD_NUMBER = 7;
    private boolean hasGangkai;
    private boolean gangkai_ = false;
    public boolean hasGangkai() { return hasGangkai; }
    public boolean getGangkai() { return gangkai_; }
    
    // optional int32 minStartScore = 8;
    public static final int MINSTARTSCORE_FIELD_NUMBER = 8;
    private boolean hasMinStartScore;
    private int minStartScore_ = 0;
    public boolean hasMinStartScore() { return hasMinStartScore; }
    public int getMinStartScore() { return minStartScore_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasRaceType()) {
        output.writeInt32(1, getRaceType());
      }
      if (hasMaxCount()) {
        output.writeInt32(2, getMaxCount());
      }
      if (hasGangScore()) {
        output.writeInt32(3, getGangScore());
      }
      if (hasZhuahu()) {
        output.writeBool(4, getZhuahu());
      }
      if (hasEndCatchCount()) {
        output.writeInt32(5, getEndCatchCount());
      }
      if (hasCatchScore()) {
        output.writeInt32(6, getCatchScore());
      }
      if (hasGangkai()) {
        output.writeBool(7, getGangkai());
      }
      if (hasMinStartScore()) {
        output.writeInt32(8, getMinStartScore());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasRaceType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getRaceType());
      }
      if (hasMaxCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getMaxCount());
      }
      if (hasGangScore()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getGangScore());
      }
      if (hasZhuahu()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, getZhuahu());
      }
      if (hasEndCatchCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getEndCatchCount());
      }
      if (hasCatchScore()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, getCatchScore());
      }
      if (hasGangkai()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, getGangkai());
      }
      if (hasMinStartScore()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, getMinStartScore());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.mahjong_public_server.protocol.Entity.GameConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.mahjong_public_server.protocol.Entity.GameConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.mahjong_public_server.protocol.Entity.GameConfig result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Entity.GameConfig.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.mahjong_public_server.protocol.Entity.GameConfig();
        return builder;
      }
      
      protected com.randioo.mahjong_public_server.protocol.Entity.GameConfig internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.mahjong_public_server.protocol.Entity.GameConfig();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.GameConfig.getDescriptor();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.GameConfig getDefaultInstanceForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.GameConfig.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.mahjong_public_server.protocol.Entity.GameConfig build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.mahjong_public_server.protocol.Entity.GameConfig buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.GameConfig buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.mahjong_public_server.protocol.Entity.GameConfig returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.mahjong_public_server.protocol.Entity.GameConfig) {
          return mergeFrom((com.randioo.mahjong_public_server.protocol.Entity.GameConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.mahjong_public_server.protocol.Entity.GameConfig other) {
        if (other == com.randioo.mahjong_public_server.protocol.Entity.GameConfig.getDefaultInstance()) return this;
        if (other.hasRaceType()) {
          setRaceType(other.getRaceType());
        }
        if (other.hasMaxCount()) {
          setMaxCount(other.getMaxCount());
        }
        if (other.hasGangScore()) {
          setGangScore(other.getGangScore());
        }
        if (other.hasZhuahu()) {
          setZhuahu(other.getZhuahu());
        }
        if (other.hasEndCatchCount()) {
          setEndCatchCount(other.getEndCatchCount());
        }
        if (other.hasCatchScore()) {
          setCatchScore(other.getCatchScore());
        }
        if (other.hasGangkai()) {
          setGangkai(other.getGangkai());
        }
        if (other.hasMinStartScore()) {
          setMinStartScore(other.getMinStartScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setRaceType(input.readInt32());
              break;
            }
            case 16: {
              setMaxCount(input.readInt32());
              break;
            }
            case 24: {
              setGangScore(input.readInt32());
              break;
            }
            case 32: {
              setZhuahu(input.readBool());
              break;
            }
            case 40: {
              setEndCatchCount(input.readInt32());
              break;
            }
            case 48: {
              setCatchScore(input.readInt32());
              break;
            }
            case 56: {
              setGangkai(input.readBool());
              break;
            }
            case 64: {
              setMinStartScore(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional int32 raceType = 1;
      public boolean hasRaceType() {
        return result.hasRaceType();
      }
      public int getRaceType() {
        return result.getRaceType();
      }
      public Builder setRaceType(int value) {
        result.hasRaceType = true;
        result.raceType_ = value;
        return this;
      }
      public Builder clearRaceType() {
        result.hasRaceType = false;
        result.raceType_ = 0;
        return this;
      }
      
      // optional int32 maxCount = 2;
      public boolean hasMaxCount() {
        return result.hasMaxCount();
      }
      public int getMaxCount() {
        return result.getMaxCount();
      }
      public Builder setMaxCount(int value) {
        result.hasMaxCount = true;
        result.maxCount_ = value;
        return this;
      }
      public Builder clearMaxCount() {
        result.hasMaxCount = false;
        result.maxCount_ = 0;
        return this;
      }
      
      // optional int32 gangScore = 3;
      public boolean hasGangScore() {
        return result.hasGangScore();
      }
      public int getGangScore() {
        return result.getGangScore();
      }
      public Builder setGangScore(int value) {
        result.hasGangScore = true;
        result.gangScore_ = value;
        return this;
      }
      public Builder clearGangScore() {
        result.hasGangScore = false;
        result.gangScore_ = 0;
        return this;
      }
      
      // optional bool zhuahu = 4;
      public boolean hasZhuahu() {
        return result.hasZhuahu();
      }
      public boolean getZhuahu() {
        return result.getZhuahu();
      }
      public Builder setZhuahu(boolean value) {
        result.hasZhuahu = true;
        result.zhuahu_ = value;
        return this;
      }
      public Builder clearZhuahu() {
        result.hasZhuahu = false;
        result.zhuahu_ = false;
        return this;
      }
      
      // optional int32 endCatchCount = 5;
      public boolean hasEndCatchCount() {
        return result.hasEndCatchCount();
      }
      public int getEndCatchCount() {
        return result.getEndCatchCount();
      }
      public Builder setEndCatchCount(int value) {
        result.hasEndCatchCount = true;
        result.endCatchCount_ = value;
        return this;
      }
      public Builder clearEndCatchCount() {
        result.hasEndCatchCount = false;
        result.endCatchCount_ = 0;
        return this;
      }
      
      // optional int32 catchScore = 6;
      public boolean hasCatchScore() {
        return result.hasCatchScore();
      }
      public int getCatchScore() {
        return result.getCatchScore();
      }
      public Builder setCatchScore(int value) {
        result.hasCatchScore = true;
        result.catchScore_ = value;
        return this;
      }
      public Builder clearCatchScore() {
        result.hasCatchScore = false;
        result.catchScore_ = 0;
        return this;
      }
      
      // optional bool gangkai = 7;
      public boolean hasGangkai() {
        return result.hasGangkai();
      }
      public boolean getGangkai() {
        return result.getGangkai();
      }
      public Builder setGangkai(boolean value) {
        result.hasGangkai = true;
        result.gangkai_ = value;
        return this;
      }
      public Builder clearGangkai() {
        result.hasGangkai = false;
        result.gangkai_ = false;
        return this;
      }
      
      // optional int32 minStartScore = 8;
      public boolean hasMinStartScore() {
        return result.hasMinStartScore();
      }
      public int getMinStartScore() {
        return result.getMinStartScore();
      }
      public Builder setMinStartScore(int value) {
        result.hasMinStartScore = true;
        result.minStartScore_ = value;
        return this;
      }
      public Builder clearMinStartScore() {
        result.hasMinStartScore = false;
        result.minStartScore_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.GameConfig)
    }
    
    static {
      defaultInstance = new GameConfig(true);
      com.randioo.mahjong_public_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.GameConfig)
  }
  
  public static final class PaiNum extends
      com.google.protobuf.GeneratedMessage {
    // Use PaiNum.newBuilder() to construct.
    private PaiNum() {
      initFields();
    }
    private PaiNum(boolean noInit) {}
    
    private static final PaiNum defaultInstance;
    public static PaiNum getDefaultInstance() {
      return defaultInstance;
    }
    
    public PaiNum getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_PaiNum_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_PaiNum_fieldAccessorTable;
    }
    
    // optional int32 seated = 1;
    public static final int SEATED_FIELD_NUMBER = 1;
    private boolean hasSeated;
    private int seated_ = 0;
    public boolean hasSeated() { return hasSeated; }
    public int getSeated() { return seated_; }
    
    // optional int32 num = 3;
    public static final int NUM_FIELD_NUMBER = 3;
    private boolean hasNum;
    private int num_ = 0;
    public boolean hasNum() { return hasNum; }
    public int getNum() { return num_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSeated()) {
        output.writeInt32(1, getSeated());
      }
      if (hasNum()) {
        output.writeInt32(3, getNum());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSeated()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getSeated());
      }
      if (hasNum()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getNum());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.mahjong_public_server.protocol.Entity.PaiNum parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.PaiNum parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.PaiNum parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.PaiNum parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.PaiNum parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.PaiNum parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.PaiNum parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.PaiNum parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.PaiNum parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.PaiNum parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.mahjong_public_server.protocol.Entity.PaiNum prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.mahjong_public_server.protocol.Entity.PaiNum result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Entity.PaiNum.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.mahjong_public_server.protocol.Entity.PaiNum();
        return builder;
      }
      
      protected com.randioo.mahjong_public_server.protocol.Entity.PaiNum internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.mahjong_public_server.protocol.Entity.PaiNum();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.PaiNum.getDescriptor();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.PaiNum getDefaultInstanceForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.PaiNum.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.mahjong_public_server.protocol.Entity.PaiNum build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.mahjong_public_server.protocol.Entity.PaiNum buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.PaiNum buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.mahjong_public_server.protocol.Entity.PaiNum returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.mahjong_public_server.protocol.Entity.PaiNum) {
          return mergeFrom((com.randioo.mahjong_public_server.protocol.Entity.PaiNum)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.mahjong_public_server.protocol.Entity.PaiNum other) {
        if (other == com.randioo.mahjong_public_server.protocol.Entity.PaiNum.getDefaultInstance()) return this;
        if (other.hasSeated()) {
          setSeated(other.getSeated());
        }
        if (other.hasNum()) {
          setNum(other.getNum());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setSeated(input.readInt32());
              break;
            }
            case 24: {
              setNum(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional int32 seated = 1;
      public boolean hasSeated() {
        return result.hasSeated();
      }
      public int getSeated() {
        return result.getSeated();
      }
      public Builder setSeated(int value) {
        result.hasSeated = true;
        result.seated_ = value;
        return this;
      }
      public Builder clearSeated() {
        result.hasSeated = false;
        result.seated_ = 0;
        return this;
      }
      
      // optional int32 num = 3;
      public boolean hasNum() {
        return result.hasNum();
      }
      public int getNum() {
        return result.getNum();
      }
      public Builder setNum(int value) {
        result.hasNum = true;
        result.num_ = value;
        return this;
      }
      public Builder clearNum() {
        result.hasNum = false;
        result.num_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.PaiNum)
    }
    
    static {
      defaultInstance = new PaiNum(true);
      com.randioo.mahjong_public_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.PaiNum)
  }
  
  public static final class Record extends
      com.google.protobuf.GeneratedMessage {
    // Use Record.newBuilder() to construct.
    private Record() {
      initFields();
    }
    private Record(boolean noInit) {}
    
    private static final Record defaultInstance;
    public static Record getDefaultInstance() {
      return defaultInstance;
    }
    
    public Record getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_Record_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_Record_fieldAccessorTable;
    }
    
    // optional int32 seated = 1;
    public static final int SEATED_FIELD_NUMBER = 1;
    private boolean hasSeated;
    private int seated_ = 0;
    public boolean hasSeated() { return hasSeated; }
    public int getSeated() { return seated_; }
    
    // repeated int32 pai = 2;
    public static final int PAI_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> pai_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getPaiList() {
      return pai_;
    }
    public int getPaiCount() { return pai_.size(); }
    public int getPai(int index) {
      return pai_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSeated()) {
        output.writeInt32(1, getSeated());
      }
      for (int element : getPaiList()) {
        output.writeInt32(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSeated()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getSeated());
      }
      {
        int dataSize = 0;
        for (int element : getPaiList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getPaiList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.mahjong_public_server.protocol.Entity.Record parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.Record parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.Record parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.Record parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.Record parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.Record parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.Record parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.Record parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.Record parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.Record parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.mahjong_public_server.protocol.Entity.Record prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.mahjong_public_server.protocol.Entity.Record result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Entity.Record.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.mahjong_public_server.protocol.Entity.Record();
        return builder;
      }
      
      protected com.randioo.mahjong_public_server.protocol.Entity.Record internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.mahjong_public_server.protocol.Entity.Record();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.Record.getDescriptor();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.Record getDefaultInstanceForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.Record.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.mahjong_public_server.protocol.Entity.Record build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.mahjong_public_server.protocol.Entity.Record buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.Record buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.pai_ != java.util.Collections.EMPTY_LIST) {
          result.pai_ =
            java.util.Collections.unmodifiableList(result.pai_);
        }
        com.randioo.mahjong_public_server.protocol.Entity.Record returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.mahjong_public_server.protocol.Entity.Record) {
          return mergeFrom((com.randioo.mahjong_public_server.protocol.Entity.Record)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.mahjong_public_server.protocol.Entity.Record other) {
        if (other == com.randioo.mahjong_public_server.protocol.Entity.Record.getDefaultInstance()) return this;
        if (other.hasSeated()) {
          setSeated(other.getSeated());
        }
        if (!other.pai_.isEmpty()) {
          if (result.pai_.isEmpty()) {
            result.pai_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.pai_.addAll(other.pai_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setSeated(input.readInt32());
              break;
            }
            case 16: {
              addPai(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addPai(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // optional int32 seated = 1;
      public boolean hasSeated() {
        return result.hasSeated();
      }
      public int getSeated() {
        return result.getSeated();
      }
      public Builder setSeated(int value) {
        result.hasSeated = true;
        result.seated_ = value;
        return this;
      }
      public Builder clearSeated() {
        result.hasSeated = false;
        result.seated_ = 0;
        return this;
      }
      
      // repeated int32 pai = 2;
      public java.util.List<java.lang.Integer> getPaiList() {
        return java.util.Collections.unmodifiableList(result.pai_);
      }
      public int getPaiCount() {
        return result.getPaiCount();
      }
      public int getPai(int index) {
        return result.getPai(index);
      }
      public Builder setPai(int index, int value) {
        result.pai_.set(index, value);
        return this;
      }
      public Builder addPai(int value) {
        if (result.pai_.isEmpty()) {
          result.pai_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.pai_.add(value);
        return this;
      }
      public Builder addAllPai(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.pai_.isEmpty()) {
          result.pai_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.pai_);
        return this;
      }
      public Builder clearPai() {
        result.pai_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.Record)
    }
    
    static {
      defaultInstance = new Record(true);
      com.randioo.mahjong_public_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.Record)
  }
  
  public static final class GameRoleData extends
      com.google.protobuf.GeneratedMessage {
    // Use GameRoleData.newBuilder() to construct.
    private GameRoleData() {
      initFields();
    }
    private GameRoleData(boolean noInit) {}
    
    private static final GameRoleData defaultInstance;
    public static GameRoleData getDefaultInstance() {
      return defaultInstance;
    }
    
    public GameRoleData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_GameRoleData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_GameRoleData_fieldAccessorTable;
    }
    
    // optional string gameRoleId = 1;
    public static final int GAMEROLEID_FIELD_NUMBER = 1;
    private boolean hasGameRoleId;
    private java.lang.String gameRoleId_ = "";
    public boolean hasGameRoleId() { return hasGameRoleId; }
    public java.lang.String getGameRoleId() { return gameRoleId_; }
    
    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional int32 seated = 3;
    public static final int SEATED_FIELD_NUMBER = 3;
    private boolean hasSeated;
    private int seated_ = 0;
    public boolean hasSeated() { return hasSeated; }
    public int getSeated() { return seated_; }
    
    // optional bool ready = 4;
    public static final int READY_FIELD_NUMBER = 4;
    private boolean hasReady;
    private boolean ready_ = false;
    public boolean hasReady() { return hasReady; }
    public boolean getReady() { return ready_; }
    
    // optional string headImgUrl = 5;
    public static final int HEADIMGURL_FIELD_NUMBER = 5;
    private boolean hasHeadImgUrl;
    private java.lang.String headImgUrl_ = "";
    public boolean hasHeadImgUrl() { return hasHeadImgUrl; }
    public java.lang.String getHeadImgUrl() { return headImgUrl_; }
    
    // optional int32 money = 6;
    public static final int MONEY_FIELD_NUMBER = 6;
    private boolean hasMoney;
    private int money_ = 0;
    public boolean hasMoney() { return hasMoney; }
    public int getMoney() { return money_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasGameRoleId()) {
        output.writeString(1, getGameRoleId());
      }
      if (hasName()) {
        output.writeString(2, getName());
      }
      if (hasSeated()) {
        output.writeInt32(3, getSeated());
      }
      if (hasReady()) {
        output.writeBool(4, getReady());
      }
      if (hasHeadImgUrl()) {
        output.writeString(5, getHeadImgUrl());
      }
      if (hasMoney()) {
        output.writeInt32(6, getMoney());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasGameRoleId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getGameRoleId());
      }
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getName());
      }
      if (hasSeated()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getSeated());
      }
      if (hasReady()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, getReady());
      }
      if (hasHeadImgUrl()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getHeadImgUrl());
      }
      if (hasMoney()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, getMoney());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.mahjong_public_server.protocol.Entity.GameRoleData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameRoleData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameRoleData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameRoleData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameRoleData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameRoleData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameRoleData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameRoleData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameRoleData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameRoleData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.mahjong_public_server.protocol.Entity.GameRoleData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.mahjong_public_server.protocol.Entity.GameRoleData result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Entity.GameRoleData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.mahjong_public_server.protocol.Entity.GameRoleData();
        return builder;
      }
      
      protected com.randioo.mahjong_public_server.protocol.Entity.GameRoleData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.mahjong_public_server.protocol.Entity.GameRoleData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.GameRoleData.getDescriptor();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.GameRoleData getDefaultInstanceForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.GameRoleData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.mahjong_public_server.protocol.Entity.GameRoleData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.mahjong_public_server.protocol.Entity.GameRoleData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.GameRoleData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.mahjong_public_server.protocol.Entity.GameRoleData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.mahjong_public_server.protocol.Entity.GameRoleData) {
          return mergeFrom((com.randioo.mahjong_public_server.protocol.Entity.GameRoleData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.mahjong_public_server.protocol.Entity.GameRoleData other) {
        if (other == com.randioo.mahjong_public_server.protocol.Entity.GameRoleData.getDefaultInstance()) return this;
        if (other.hasGameRoleId()) {
          setGameRoleId(other.getGameRoleId());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasSeated()) {
          setSeated(other.getSeated());
        }
        if (other.hasReady()) {
          setReady(other.getReady());
        }
        if (other.hasHeadImgUrl()) {
          setHeadImgUrl(other.getHeadImgUrl());
        }
        if (other.hasMoney()) {
          setMoney(other.getMoney());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setGameRoleId(input.readString());
              break;
            }
            case 18: {
              setName(input.readString());
              break;
            }
            case 24: {
              setSeated(input.readInt32());
              break;
            }
            case 32: {
              setReady(input.readBool());
              break;
            }
            case 42: {
              setHeadImgUrl(input.readString());
              break;
            }
            case 48: {
              setMoney(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional string gameRoleId = 1;
      public boolean hasGameRoleId() {
        return result.hasGameRoleId();
      }
      public java.lang.String getGameRoleId() {
        return result.getGameRoleId();
      }
      public Builder setGameRoleId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasGameRoleId = true;
        result.gameRoleId_ = value;
        return this;
      }
      public Builder clearGameRoleId() {
        result.hasGameRoleId = false;
        result.gameRoleId_ = getDefaultInstance().getGameRoleId();
        return this;
      }
      
      // optional string name = 2;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional int32 seated = 3;
      public boolean hasSeated() {
        return result.hasSeated();
      }
      public int getSeated() {
        return result.getSeated();
      }
      public Builder setSeated(int value) {
        result.hasSeated = true;
        result.seated_ = value;
        return this;
      }
      public Builder clearSeated() {
        result.hasSeated = false;
        result.seated_ = 0;
        return this;
      }
      
      // optional bool ready = 4;
      public boolean hasReady() {
        return result.hasReady();
      }
      public boolean getReady() {
        return result.getReady();
      }
      public Builder setReady(boolean value) {
        result.hasReady = true;
        result.ready_ = value;
        return this;
      }
      public Builder clearReady() {
        result.hasReady = false;
        result.ready_ = false;
        return this;
      }
      
      // optional string headImgUrl = 5;
      public boolean hasHeadImgUrl() {
        return result.hasHeadImgUrl();
      }
      public java.lang.String getHeadImgUrl() {
        return result.getHeadImgUrl();
      }
      public Builder setHeadImgUrl(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasHeadImgUrl = true;
        result.headImgUrl_ = value;
        return this;
      }
      public Builder clearHeadImgUrl() {
        result.hasHeadImgUrl = false;
        result.headImgUrl_ = getDefaultInstance().getHeadImgUrl();
        return this;
      }
      
      // optional int32 money = 6;
      public boolean hasMoney() {
        return result.hasMoney();
      }
      public int getMoney() {
        return result.getMoney();
      }
      public Builder setMoney(int value) {
        result.hasMoney = true;
        result.money_ = value;
        return this;
      }
      public Builder clearMoney() {
        result.hasMoney = false;
        result.money_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.GameRoleData)
    }
    
    static {
      defaultInstance = new GameRoleData(true);
      com.randioo.mahjong_public_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.GameRoleData)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_RoleData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_RoleData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_GameConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_GameConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_PaiNum_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_PaiNum_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_Record_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_Record_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_GameRoleData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_GameRoleData_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014Entity.proto\022*com.randioo.mahjong_publ" +
      "ic_server.protocol\"\206\001\n\010RoleData\022\016\n\006roleI" +
      "d\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022\r\n\005money\030\003 \001(\005\022\016\n\006" +
      "volume\030\004 \001(\005\022\023\n\013musicVolume\030\005 \001(\005\022\022\n\nhea" +
      "dImgUrl\030\006 \001(\t\022\024\n\014randiooMoney\030\007 \001(\005\"\246\001\n\n" +
      "GameConfig\022\020\n\010raceType\030\001 \001(\005\022\020\n\010maxCount" +
      "\030\002 \001(\005\022\021\n\tgangScore\030\003 \001(\005\022\016\n\006zhuahu\030\004 \001(" +
      "\010\022\025\n\rendCatchCount\030\005 \001(\005\022\022\n\ncatchScore\030\006" +
      " \001(\005\022\017\n\007gangkai\030\007 \001(\010\022\025\n\rminStartScore\030\010" +
      " \001(\005\"%\n\006PaiNum\022\016\n\006seated\030\001 \001(\005\022\013\n\003num\030\003 ",
      "\001(\005\"%\n\006Record\022\016\n\006seated\030\001 \001(\005\022\013\n\003pai\030\002 \003" +
      "(\005\"r\n\014GameRoleData\022\022\n\ngameRoleId\030\001 \001(\t\022\014" +
      "\n\004name\030\002 \001(\t\022\016\n\006seated\030\003 \001(\005\022\r\n\005ready\030\004 " +
      "\001(\010\022\022\n\nheadImgUrl\030\005 \001(\t\022\r\n\005money\030\006 \001(\005*5" +
      "\n\010GameType\022\023\n\017GAME_TYPE_MATCH\020\001\022\024\n\020GAME_" +
      "TYPE_FRIEND\020\002*M\n\tGameState\022\026\n\022GAME_STATE" +
      "_PREPARE\020\001\022\024\n\020GAME_START_START\020\002\022\022\n\016GAME" +
      "_START_END\020\003"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_randioo_mahjong_public_server_protocol_RoleData_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_randioo_mahjong_public_server_protocol_RoleData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_RoleData_descriptor,
              new java.lang.String[] { "RoleId", "Name", "Money", "Volume", "MusicVolume", "HeadImgUrl", "RandiooMoney", },
              com.randioo.mahjong_public_server.protocol.Entity.RoleData.class,
              com.randioo.mahjong_public_server.protocol.Entity.RoleData.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_GameConfig_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_randioo_mahjong_public_server_protocol_GameConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_GameConfig_descriptor,
              new java.lang.String[] { "RaceType", "MaxCount", "GangScore", "Zhuahu", "EndCatchCount", "CatchScore", "Gangkai", "MinStartScore", },
              com.randioo.mahjong_public_server.protocol.Entity.GameConfig.class,
              com.randioo.mahjong_public_server.protocol.Entity.GameConfig.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_PaiNum_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_randioo_mahjong_public_server_protocol_PaiNum_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_PaiNum_descriptor,
              new java.lang.String[] { "Seated", "Num", },
              com.randioo.mahjong_public_server.protocol.Entity.PaiNum.class,
              com.randioo.mahjong_public_server.protocol.Entity.PaiNum.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_Record_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_randioo_mahjong_public_server_protocol_Record_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_Record_descriptor,
              new java.lang.String[] { "Seated", "Pai", },
              com.randioo.mahjong_public_server.protocol.Entity.Record.class,
              com.randioo.mahjong_public_server.protocol.Entity.Record.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_GameRoleData_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_com_randioo_mahjong_public_server_protocol_GameRoleData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_GameRoleData_descriptor,
              new java.lang.String[] { "GameRoleId", "Name", "Seated", "Ready", "HeadImgUrl", "Money", },
              com.randioo.mahjong_public_server.protocol.Entity.GameRoleData.class,
              com.randioo.mahjong_public_server.protocol.Entity.GameRoleData.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
