// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Entity.proto

package com.randioo.mahjong_public_server.protocol;

public final class Entity {
  private Entity() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum GameType
      implements com.google.protobuf.ProtocolMessageEnum {
    GAME_TYPE_MATCH(0, 1),
    GAME_TYPE_FRIEND(1, 2),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static GameType valueOf(int value) {
      switch (value) {
        case 1: return GAME_TYPE_MATCH;
        case 2: return GAME_TYPE_FRIEND;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<GameType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<GameType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GameType>() {
            public GameType findValueByNumber(int number) {
              return GameType.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Entity.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final GameType[] VALUES = {
      GAME_TYPE_MATCH, GAME_TYPE_FRIEND, 
    };
    public static GameType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private GameType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      com.randioo.mahjong_public_server.protocol.Entity.getDescriptor();
    }
    
    // @@protoc_insertion_point(enum_scope:com.randioo.mahjong_public_server.protocol.GameType)
  }
  
  public enum GameState
      implements com.google.protobuf.ProtocolMessageEnum {
    GAME_STATE_PREPARE(0, 1),
    GAME_START_START(1, 2),
    GAME_START_END(2, 3),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static GameState valueOf(int value) {
      switch (value) {
        case 1: return GAME_STATE_PREPARE;
        case 2: return GAME_START_START;
        case 3: return GAME_START_END;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<GameState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<GameState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GameState>() {
            public GameState findValueByNumber(int number) {
              return GameState.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Entity.getDescriptor().getEnumTypes().get(1);
    }
    
    private static final GameState[] VALUES = {
      GAME_STATE_PREPARE, GAME_START_START, GAME_START_END, 
    };
    public static GameState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private GameState(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      com.randioo.mahjong_public_server.protocol.Entity.getDescriptor();
    }
    
    // @@protoc_insertion_point(enum_scope:com.randioo.mahjong_public_server.protocol.GameState)
  }
  
  public static final class RoleData extends
      com.google.protobuf.GeneratedMessage {
    // Use RoleData.newBuilder() to construct.
    private RoleData() {
      initFields();
    }
    private RoleData(boolean noInit) {}
    
    private static final RoleData defaultInstance;
    public static RoleData getDefaultInstance() {
      return defaultInstance;
    }
    
    public RoleData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_RoleData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_RoleData_fieldAccessorTable;
    }
    
    // optional int32 roleId = 1;
    public static final int ROLEID_FIELD_NUMBER = 1;
    private boolean hasRoleId;
    private int roleId_ = 0;
    public boolean hasRoleId() { return hasRoleId; }
    public int getRoleId() { return roleId_; }
    
    // optional int32 gameId = 2;
    public static final int GAMEID_FIELD_NUMBER = 2;
    private boolean hasGameId;
    private int gameId_ = 0;
    public boolean hasGameId() { return hasGameId; }
    public int getGameId() { return gameId_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasRoleId()) {
        output.writeInt32(1, getRoleId());
      }
      if (hasGameId()) {
        output.writeInt32(2, getGameId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasRoleId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getRoleId());
      }
      if (hasGameId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getGameId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.mahjong_public_server.protocol.Entity.RoleData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.RoleData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.RoleData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.RoleData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.RoleData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.RoleData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.RoleData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.RoleData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.RoleData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.RoleData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.mahjong_public_server.protocol.Entity.RoleData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.mahjong_public_server.protocol.Entity.RoleData result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Entity.RoleData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.mahjong_public_server.protocol.Entity.RoleData();
        return builder;
      }
      
      protected com.randioo.mahjong_public_server.protocol.Entity.RoleData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.mahjong_public_server.protocol.Entity.RoleData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.RoleData.getDescriptor();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.RoleData getDefaultInstanceForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.RoleData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.mahjong_public_server.protocol.Entity.RoleData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.mahjong_public_server.protocol.Entity.RoleData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.RoleData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.mahjong_public_server.protocol.Entity.RoleData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.mahjong_public_server.protocol.Entity.RoleData) {
          return mergeFrom((com.randioo.mahjong_public_server.protocol.Entity.RoleData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.mahjong_public_server.protocol.Entity.RoleData other) {
        if (other == com.randioo.mahjong_public_server.protocol.Entity.RoleData.getDefaultInstance()) return this;
        if (other.hasRoleId()) {
          setRoleId(other.getRoleId());
        }
        if (other.hasGameId()) {
          setGameId(other.getGameId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setRoleId(input.readInt32());
              break;
            }
            case 16: {
              setGameId(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional int32 roleId = 1;
      public boolean hasRoleId() {
        return result.hasRoleId();
      }
      public int getRoleId() {
        return result.getRoleId();
      }
      public Builder setRoleId(int value) {
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder clearRoleId() {
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      // optional int32 gameId = 2;
      public boolean hasGameId() {
        return result.hasGameId();
      }
      public int getGameId() {
        return result.getGameId();
      }
      public Builder setGameId(int value) {
        result.hasGameId = true;
        result.gameId_ = value;
        return this;
      }
      public Builder clearGameId() {
        result.hasGameId = false;
        result.gameId_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.RoleData)
    }
    
    static {
      defaultInstance = new RoleData(true);
      com.randioo.mahjong_public_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.RoleData)
  }
  
  public static final class GameConfig extends
      com.google.protobuf.GeneratedMessage {
    // Use GameConfig.newBuilder() to construct.
    private GameConfig() {
      initFields();
    }
    private GameConfig(boolean noInit) {}
    
    private static final GameConfig defaultInstance;
    public static GameConfig getDefaultInstance() {
      return defaultInstance;
    }
    
    public GameConfig getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_GameConfig_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_GameConfig_fieldAccessorTable;
    }
    
    // optional int32 raceType = 1;
    public static final int RACETYPE_FIELD_NUMBER = 1;
    private boolean hasRaceType;
    private int raceType_ = 0;
    public boolean hasRaceType() { return hasRaceType; }
    public int getRaceType() { return raceType_; }
    
    // optional int32 maxCount = 2;
    public static final int MAXCOUNT_FIELD_NUMBER = 2;
    private boolean hasMaxCount;
    private int maxCount_ = 0;
    public boolean hasMaxCount() { return hasMaxCount; }
    public int getMaxCount() { return maxCount_; }
    
    // optional int32 gangScore = 3;
    public static final int GANGSCORE_FIELD_NUMBER = 3;
    private boolean hasGangScore;
    private int gangScore_ = 0;
    public boolean hasGangScore() { return hasGangScore; }
    public int getGangScore() { return gangScore_; }
    
    // optional bool zhuahu = 4;
    public static final int ZHUAHU_FIELD_NUMBER = 4;
    private boolean hasZhuahu;
    private boolean zhuahu_ = false;
    public boolean hasZhuahu() { return hasZhuahu; }
    public boolean getZhuahu() { return zhuahu_; }
    
    // optional int32 endCatchCount = 5;
    public static final int ENDCATCHCOUNT_FIELD_NUMBER = 5;
    private boolean hasEndCatchCount;
    private int endCatchCount_ = 0;
    public boolean hasEndCatchCount() { return hasEndCatchCount; }
    public int getEndCatchCount() { return endCatchCount_; }
    
    // optional int32 catchScore = 6;
    public static final int CATCHSCORE_FIELD_NUMBER = 6;
    private boolean hasCatchScore;
    private int catchScore_ = 0;
    public boolean hasCatchScore() { return hasCatchScore; }
    public int getCatchScore() { return catchScore_; }
    
    // optional bool gangkai = 7;
    public static final int GANGKAI_FIELD_NUMBER = 7;
    private boolean hasGangkai;
    private boolean gangkai_ = false;
    public boolean hasGangkai() { return hasGangkai; }
    public boolean getGangkai() { return gangkai_; }
    
    // optional int32 minStartScore = 8;
    public static final int MINSTARTSCORE_FIELD_NUMBER = 8;
    private boolean hasMinStartScore;
    private int minStartScore_ = 0;
    public boolean hasMinStartScore() { return hasMinStartScore; }
    public int getMinStartScore() { return minStartScore_; }
    
    // optional string endTime = 9;
    public static final int ENDTIME_FIELD_NUMBER = 9;
    private boolean hasEndTime;
    private java.lang.String endTime_ = "";
    public boolean hasEndTime() { return hasEndTime; }
    public java.lang.String getEndTime() { return endTime_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasRaceType()) {
        output.writeInt32(1, getRaceType());
      }
      if (hasMaxCount()) {
        output.writeInt32(2, getMaxCount());
      }
      if (hasGangScore()) {
        output.writeInt32(3, getGangScore());
      }
      if (hasZhuahu()) {
        output.writeBool(4, getZhuahu());
      }
      if (hasEndCatchCount()) {
        output.writeInt32(5, getEndCatchCount());
      }
      if (hasCatchScore()) {
        output.writeInt32(6, getCatchScore());
      }
      if (hasGangkai()) {
        output.writeBool(7, getGangkai());
      }
      if (hasMinStartScore()) {
        output.writeInt32(8, getMinStartScore());
      }
      if (hasEndTime()) {
        output.writeString(9, getEndTime());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasRaceType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getRaceType());
      }
      if (hasMaxCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getMaxCount());
      }
      if (hasGangScore()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getGangScore());
      }
      if (hasZhuahu()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, getZhuahu());
      }
      if (hasEndCatchCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getEndCatchCount());
      }
      if (hasCatchScore()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, getCatchScore());
      }
      if (hasGangkai()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, getGangkai());
      }
      if (hasMinStartScore()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, getMinStartScore());
      }
      if (hasEndTime()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(9, getEndTime());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.mahjong_public_server.protocol.Entity.GameConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.mahjong_public_server.protocol.Entity.GameConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.mahjong_public_server.protocol.Entity.GameConfig result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Entity.GameConfig.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.mahjong_public_server.protocol.Entity.GameConfig();
        return builder;
      }
      
      protected com.randioo.mahjong_public_server.protocol.Entity.GameConfig internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.mahjong_public_server.protocol.Entity.GameConfig();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.GameConfig.getDescriptor();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.GameConfig getDefaultInstanceForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.GameConfig.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.mahjong_public_server.protocol.Entity.GameConfig build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.mahjong_public_server.protocol.Entity.GameConfig buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.GameConfig buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.mahjong_public_server.protocol.Entity.GameConfig returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.mahjong_public_server.protocol.Entity.GameConfig) {
          return mergeFrom((com.randioo.mahjong_public_server.protocol.Entity.GameConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.mahjong_public_server.protocol.Entity.GameConfig other) {
        if (other == com.randioo.mahjong_public_server.protocol.Entity.GameConfig.getDefaultInstance()) return this;
        if (other.hasRaceType()) {
          setRaceType(other.getRaceType());
        }
        if (other.hasMaxCount()) {
          setMaxCount(other.getMaxCount());
        }
        if (other.hasGangScore()) {
          setGangScore(other.getGangScore());
        }
        if (other.hasZhuahu()) {
          setZhuahu(other.getZhuahu());
        }
        if (other.hasEndCatchCount()) {
          setEndCatchCount(other.getEndCatchCount());
        }
        if (other.hasCatchScore()) {
          setCatchScore(other.getCatchScore());
        }
        if (other.hasGangkai()) {
          setGangkai(other.getGangkai());
        }
        if (other.hasMinStartScore()) {
          setMinStartScore(other.getMinStartScore());
        }
        if (other.hasEndTime()) {
          setEndTime(other.getEndTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setRaceType(input.readInt32());
              break;
            }
            case 16: {
              setMaxCount(input.readInt32());
              break;
            }
            case 24: {
              setGangScore(input.readInt32());
              break;
            }
            case 32: {
              setZhuahu(input.readBool());
              break;
            }
            case 40: {
              setEndCatchCount(input.readInt32());
              break;
            }
            case 48: {
              setCatchScore(input.readInt32());
              break;
            }
            case 56: {
              setGangkai(input.readBool());
              break;
            }
            case 64: {
              setMinStartScore(input.readInt32());
              break;
            }
            case 74: {
              setEndTime(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional int32 raceType = 1;
      public boolean hasRaceType() {
        return result.hasRaceType();
      }
      public int getRaceType() {
        return result.getRaceType();
      }
      public Builder setRaceType(int value) {
        result.hasRaceType = true;
        result.raceType_ = value;
        return this;
      }
      public Builder clearRaceType() {
        result.hasRaceType = false;
        result.raceType_ = 0;
        return this;
      }
      
      // optional int32 maxCount = 2;
      public boolean hasMaxCount() {
        return result.hasMaxCount();
      }
      public int getMaxCount() {
        return result.getMaxCount();
      }
      public Builder setMaxCount(int value) {
        result.hasMaxCount = true;
        result.maxCount_ = value;
        return this;
      }
      public Builder clearMaxCount() {
        result.hasMaxCount = false;
        result.maxCount_ = 0;
        return this;
      }
      
      // optional int32 gangScore = 3;
      public boolean hasGangScore() {
        return result.hasGangScore();
      }
      public int getGangScore() {
        return result.getGangScore();
      }
      public Builder setGangScore(int value) {
        result.hasGangScore = true;
        result.gangScore_ = value;
        return this;
      }
      public Builder clearGangScore() {
        result.hasGangScore = false;
        result.gangScore_ = 0;
        return this;
      }
      
      // optional bool zhuahu = 4;
      public boolean hasZhuahu() {
        return result.hasZhuahu();
      }
      public boolean getZhuahu() {
        return result.getZhuahu();
      }
      public Builder setZhuahu(boolean value) {
        result.hasZhuahu = true;
        result.zhuahu_ = value;
        return this;
      }
      public Builder clearZhuahu() {
        result.hasZhuahu = false;
        result.zhuahu_ = false;
        return this;
      }
      
      // optional int32 endCatchCount = 5;
      public boolean hasEndCatchCount() {
        return result.hasEndCatchCount();
      }
      public int getEndCatchCount() {
        return result.getEndCatchCount();
      }
      public Builder setEndCatchCount(int value) {
        result.hasEndCatchCount = true;
        result.endCatchCount_ = value;
        return this;
      }
      public Builder clearEndCatchCount() {
        result.hasEndCatchCount = false;
        result.endCatchCount_ = 0;
        return this;
      }
      
      // optional int32 catchScore = 6;
      public boolean hasCatchScore() {
        return result.hasCatchScore();
      }
      public int getCatchScore() {
        return result.getCatchScore();
      }
      public Builder setCatchScore(int value) {
        result.hasCatchScore = true;
        result.catchScore_ = value;
        return this;
      }
      public Builder clearCatchScore() {
        result.hasCatchScore = false;
        result.catchScore_ = 0;
        return this;
      }
      
      // optional bool gangkai = 7;
      public boolean hasGangkai() {
        return result.hasGangkai();
      }
      public boolean getGangkai() {
        return result.getGangkai();
      }
      public Builder setGangkai(boolean value) {
        result.hasGangkai = true;
        result.gangkai_ = value;
        return this;
      }
      public Builder clearGangkai() {
        result.hasGangkai = false;
        result.gangkai_ = false;
        return this;
      }
      
      // optional int32 minStartScore = 8;
      public boolean hasMinStartScore() {
        return result.hasMinStartScore();
      }
      public int getMinStartScore() {
        return result.getMinStartScore();
      }
      public Builder setMinStartScore(int value) {
        result.hasMinStartScore = true;
        result.minStartScore_ = value;
        return this;
      }
      public Builder clearMinStartScore() {
        result.hasMinStartScore = false;
        result.minStartScore_ = 0;
        return this;
      }
      
      // optional string endTime = 9;
      public boolean hasEndTime() {
        return result.hasEndTime();
      }
      public java.lang.String getEndTime() {
        return result.getEndTime();
      }
      public Builder setEndTime(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasEndTime = true;
        result.endTime_ = value;
        return this;
      }
      public Builder clearEndTime() {
        result.hasEndTime = false;
        result.endTime_ = getDefaultInstance().getEndTime();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.GameConfig)
    }
    
    static {
      defaultInstance = new GameConfig(true);
      com.randioo.mahjong_public_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.GameConfig)
  }
  
  public static final class PaiNum extends
      com.google.protobuf.GeneratedMessage {
    // Use PaiNum.newBuilder() to construct.
    private PaiNum() {
      initFields();
    }
    private PaiNum(boolean noInit) {}
    
    private static final PaiNum defaultInstance;
    public static PaiNum getDefaultInstance() {
      return defaultInstance;
    }
    
    public PaiNum getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_PaiNum_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_PaiNum_fieldAccessorTable;
    }
    
    // optional int32 seat = 1;
    public static final int SEAT_FIELD_NUMBER = 1;
    private boolean hasSeat;
    private int seat_ = 0;
    public boolean hasSeat() { return hasSeat; }
    public int getSeat() { return seat_; }
    
    // optional int32 num = 3;
    public static final int NUM_FIELD_NUMBER = 3;
    private boolean hasNum;
    private int num_ = 0;
    public boolean hasNum() { return hasNum; }
    public int getNum() { return num_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSeat()) {
        output.writeInt32(1, getSeat());
      }
      if (hasNum()) {
        output.writeInt32(3, getNum());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSeat()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getSeat());
      }
      if (hasNum()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getNum());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.mahjong_public_server.protocol.Entity.PaiNum parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.PaiNum parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.PaiNum parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.PaiNum parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.PaiNum parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.PaiNum parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.PaiNum parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.PaiNum parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.PaiNum parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.PaiNum parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.mahjong_public_server.protocol.Entity.PaiNum prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.mahjong_public_server.protocol.Entity.PaiNum result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Entity.PaiNum.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.mahjong_public_server.protocol.Entity.PaiNum();
        return builder;
      }
      
      protected com.randioo.mahjong_public_server.protocol.Entity.PaiNum internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.mahjong_public_server.protocol.Entity.PaiNum();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.PaiNum.getDescriptor();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.PaiNum getDefaultInstanceForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.PaiNum.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.mahjong_public_server.protocol.Entity.PaiNum build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.mahjong_public_server.protocol.Entity.PaiNum buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.PaiNum buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.mahjong_public_server.protocol.Entity.PaiNum returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.mahjong_public_server.protocol.Entity.PaiNum) {
          return mergeFrom((com.randioo.mahjong_public_server.protocol.Entity.PaiNum)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.mahjong_public_server.protocol.Entity.PaiNum other) {
        if (other == com.randioo.mahjong_public_server.protocol.Entity.PaiNum.getDefaultInstance()) return this;
        if (other.hasSeat()) {
          setSeat(other.getSeat());
        }
        if (other.hasNum()) {
          setNum(other.getNum());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setSeat(input.readInt32());
              break;
            }
            case 24: {
              setNum(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional int32 seat = 1;
      public boolean hasSeat() {
        return result.hasSeat();
      }
      public int getSeat() {
        return result.getSeat();
      }
      public Builder setSeat(int value) {
        result.hasSeat = true;
        result.seat_ = value;
        return this;
      }
      public Builder clearSeat() {
        result.hasSeat = false;
        result.seat_ = 0;
        return this;
      }
      
      // optional int32 num = 3;
      public boolean hasNum() {
        return result.hasNum();
      }
      public int getNum() {
        return result.getNum();
      }
      public Builder setNum(int value) {
        result.hasNum = true;
        result.num_ = value;
        return this;
      }
      public Builder clearNum() {
        result.hasNum = false;
        result.num_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.PaiNum)
    }
    
    static {
      defaultInstance = new PaiNum(true);
      com.randioo.mahjong_public_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.PaiNum)
  }
  
  public static final class Record extends
      com.google.protobuf.GeneratedMessage {
    // Use Record.newBuilder() to construct.
    private Record() {
      initFields();
    }
    private Record(boolean noInit) {}
    
    private static final Record defaultInstance;
    public static Record getDefaultInstance() {
      return defaultInstance;
    }
    
    public Record getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_Record_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_Record_fieldAccessorTable;
    }
    
    // optional int32 seat = 1;
    public static final int SEAT_FIELD_NUMBER = 1;
    private boolean hasSeat;
    private int seat_ = 0;
    public boolean hasSeat() { return hasSeat; }
    public int getSeat() { return seat_; }
    
    // repeated int32 pai = 2;
    public static final int PAI_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> pai_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getPaiList() {
      return pai_;
    }
    public int getPaiCount() { return pai_.size(); }
    public int getPai(int index) {
      return pai_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSeat()) {
        output.writeInt32(1, getSeat());
      }
      for (int element : getPaiList()) {
        output.writeInt32(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSeat()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getSeat());
      }
      {
        int dataSize = 0;
        for (int element : getPaiList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getPaiList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.mahjong_public_server.protocol.Entity.Record parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.Record parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.Record parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.Record parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.Record parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.Record parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.Record parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.Record parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.Record parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.Record parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.mahjong_public_server.protocol.Entity.Record prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.mahjong_public_server.protocol.Entity.Record result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Entity.Record.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.mahjong_public_server.protocol.Entity.Record();
        return builder;
      }
      
      protected com.randioo.mahjong_public_server.protocol.Entity.Record internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.mahjong_public_server.protocol.Entity.Record();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.Record.getDescriptor();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.Record getDefaultInstanceForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.Record.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.mahjong_public_server.protocol.Entity.Record build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.mahjong_public_server.protocol.Entity.Record buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.Record buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.pai_ != java.util.Collections.EMPTY_LIST) {
          result.pai_ =
            java.util.Collections.unmodifiableList(result.pai_);
        }
        com.randioo.mahjong_public_server.protocol.Entity.Record returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.mahjong_public_server.protocol.Entity.Record) {
          return mergeFrom((com.randioo.mahjong_public_server.protocol.Entity.Record)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.mahjong_public_server.protocol.Entity.Record other) {
        if (other == com.randioo.mahjong_public_server.protocol.Entity.Record.getDefaultInstance()) return this;
        if (other.hasSeat()) {
          setSeat(other.getSeat());
        }
        if (!other.pai_.isEmpty()) {
          if (result.pai_.isEmpty()) {
            result.pai_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.pai_.addAll(other.pai_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setSeat(input.readInt32());
              break;
            }
            case 16: {
              addPai(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addPai(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // optional int32 seat = 1;
      public boolean hasSeat() {
        return result.hasSeat();
      }
      public int getSeat() {
        return result.getSeat();
      }
      public Builder setSeat(int value) {
        result.hasSeat = true;
        result.seat_ = value;
        return this;
      }
      public Builder clearSeat() {
        result.hasSeat = false;
        result.seat_ = 0;
        return this;
      }
      
      // repeated int32 pai = 2;
      public java.util.List<java.lang.Integer> getPaiList() {
        return java.util.Collections.unmodifiableList(result.pai_);
      }
      public int getPaiCount() {
        return result.getPaiCount();
      }
      public int getPai(int index) {
        return result.getPai(index);
      }
      public Builder setPai(int index, int value) {
        result.pai_.set(index, value);
        return this;
      }
      public Builder addPai(int value) {
        if (result.pai_.isEmpty()) {
          result.pai_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.pai_.add(value);
        return this;
      }
      public Builder addAllPai(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.pai_.isEmpty()) {
          result.pai_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.pai_);
        return this;
      }
      public Builder clearPai() {
        result.pai_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.Record)
    }
    
    static {
      defaultInstance = new Record(true);
      com.randioo.mahjong_public_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.Record)
  }
  
  public static final class GameRoleData extends
      com.google.protobuf.GeneratedMessage {
    // Use GameRoleData.newBuilder() to construct.
    private GameRoleData() {
      initFields();
    }
    private GameRoleData(boolean noInit) {}
    
    private static final GameRoleData defaultInstance;
    public static GameRoleData getDefaultInstance() {
      return defaultInstance;
    }
    
    public GameRoleData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_GameRoleData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_GameRoleData_fieldAccessorTable;
    }
    
    // optional string gameRoleId = 1;
    public static final int GAMEROLEID_FIELD_NUMBER = 1;
    private boolean hasGameRoleId;
    private java.lang.String gameRoleId_ = "";
    public boolean hasGameRoleId() { return hasGameRoleId; }
    public java.lang.String getGameRoleId() { return gameRoleId_; }
    
    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional int32 seat = 3;
    public static final int SEAT_FIELD_NUMBER = 3;
    private boolean hasSeat;
    private int seat_ = 0;
    public boolean hasSeat() { return hasSeat; }
    public int getSeat() { return seat_; }
    
    // optional bool ready = 4;
    public static final int READY_FIELD_NUMBER = 4;
    private boolean hasReady;
    private boolean ready_ = false;
    public boolean hasReady() { return hasReady; }
    public boolean getReady() { return ready_; }
    
    // optional string headImgUrl = 5;
    public static final int HEADIMGURL_FIELD_NUMBER = 5;
    private boolean hasHeadImgUrl;
    private java.lang.String headImgUrl_ = "";
    public boolean hasHeadImgUrl() { return hasHeadImgUrl; }
    public java.lang.String getHeadImgUrl() { return headImgUrl_; }
    
    // optional int32 money = 6;
    public static final int MONEY_FIELD_NUMBER = 6;
    private boolean hasMoney;
    private int money_ = 0;
    public boolean hasMoney() { return hasMoney; }
    public int getMoney() { return money_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasGameRoleId()) {
        output.writeString(1, getGameRoleId());
      }
      if (hasName()) {
        output.writeString(2, getName());
      }
      if (hasSeat()) {
        output.writeInt32(3, getSeat());
      }
      if (hasReady()) {
        output.writeBool(4, getReady());
      }
      if (hasHeadImgUrl()) {
        output.writeString(5, getHeadImgUrl());
      }
      if (hasMoney()) {
        output.writeInt32(6, getMoney());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasGameRoleId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getGameRoleId());
      }
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getName());
      }
      if (hasSeat()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getSeat());
      }
      if (hasReady()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, getReady());
      }
      if (hasHeadImgUrl()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getHeadImgUrl());
      }
      if (hasMoney()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, getMoney());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.mahjong_public_server.protocol.Entity.GameRoleData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameRoleData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameRoleData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameRoleData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameRoleData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameRoleData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameRoleData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameRoleData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameRoleData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameRoleData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.mahjong_public_server.protocol.Entity.GameRoleData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.mahjong_public_server.protocol.Entity.GameRoleData result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Entity.GameRoleData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.mahjong_public_server.protocol.Entity.GameRoleData();
        return builder;
      }
      
      protected com.randioo.mahjong_public_server.protocol.Entity.GameRoleData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.mahjong_public_server.protocol.Entity.GameRoleData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.GameRoleData.getDescriptor();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.GameRoleData getDefaultInstanceForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.GameRoleData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.mahjong_public_server.protocol.Entity.GameRoleData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.mahjong_public_server.protocol.Entity.GameRoleData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.GameRoleData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.mahjong_public_server.protocol.Entity.GameRoleData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.mahjong_public_server.protocol.Entity.GameRoleData) {
          return mergeFrom((com.randioo.mahjong_public_server.protocol.Entity.GameRoleData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.mahjong_public_server.protocol.Entity.GameRoleData other) {
        if (other == com.randioo.mahjong_public_server.protocol.Entity.GameRoleData.getDefaultInstance()) return this;
        if (other.hasGameRoleId()) {
          setGameRoleId(other.getGameRoleId());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasSeat()) {
          setSeat(other.getSeat());
        }
        if (other.hasReady()) {
          setReady(other.getReady());
        }
        if (other.hasHeadImgUrl()) {
          setHeadImgUrl(other.getHeadImgUrl());
        }
        if (other.hasMoney()) {
          setMoney(other.getMoney());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setGameRoleId(input.readString());
              break;
            }
            case 18: {
              setName(input.readString());
              break;
            }
            case 24: {
              setSeat(input.readInt32());
              break;
            }
            case 32: {
              setReady(input.readBool());
              break;
            }
            case 42: {
              setHeadImgUrl(input.readString());
              break;
            }
            case 48: {
              setMoney(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional string gameRoleId = 1;
      public boolean hasGameRoleId() {
        return result.hasGameRoleId();
      }
      public java.lang.String getGameRoleId() {
        return result.getGameRoleId();
      }
      public Builder setGameRoleId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasGameRoleId = true;
        result.gameRoleId_ = value;
        return this;
      }
      public Builder clearGameRoleId() {
        result.hasGameRoleId = false;
        result.gameRoleId_ = getDefaultInstance().getGameRoleId();
        return this;
      }
      
      // optional string name = 2;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional int32 seat = 3;
      public boolean hasSeat() {
        return result.hasSeat();
      }
      public int getSeat() {
        return result.getSeat();
      }
      public Builder setSeat(int value) {
        result.hasSeat = true;
        result.seat_ = value;
        return this;
      }
      public Builder clearSeat() {
        result.hasSeat = false;
        result.seat_ = 0;
        return this;
      }
      
      // optional bool ready = 4;
      public boolean hasReady() {
        return result.hasReady();
      }
      public boolean getReady() {
        return result.getReady();
      }
      public Builder setReady(boolean value) {
        result.hasReady = true;
        result.ready_ = value;
        return this;
      }
      public Builder clearReady() {
        result.hasReady = false;
        result.ready_ = false;
        return this;
      }
      
      // optional string headImgUrl = 5;
      public boolean hasHeadImgUrl() {
        return result.hasHeadImgUrl();
      }
      public java.lang.String getHeadImgUrl() {
        return result.getHeadImgUrl();
      }
      public Builder setHeadImgUrl(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasHeadImgUrl = true;
        result.headImgUrl_ = value;
        return this;
      }
      public Builder clearHeadImgUrl() {
        result.hasHeadImgUrl = false;
        result.headImgUrl_ = getDefaultInstance().getHeadImgUrl();
        return this;
      }
      
      // optional int32 money = 6;
      public boolean hasMoney() {
        return result.hasMoney();
      }
      public int getMoney() {
        return result.getMoney();
      }
      public Builder setMoney(int value) {
        result.hasMoney = true;
        result.money_ = value;
        return this;
      }
      public Builder clearMoney() {
        result.hasMoney = false;
        result.money_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.GameRoleData)
    }
    
    static {
      defaultInstance = new GameRoleData(true);
      com.randioo.mahjong_public_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.GameRoleData)
  }
  
  public static final class CallGangData extends
      com.google.protobuf.GeneratedMessage {
    // Use CallGangData.newBuilder() to construct.
    private CallGangData() {
      initFields();
    }
    private CallGangData(boolean noInit) {}
    
    private static final CallGangData defaultInstance;
    public static CallGangData getDefaultInstance() {
      return defaultInstance;
    }
    
    public CallGangData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_CallGangData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_CallGangData_fieldAccessorTable;
    }
    
    // optional int32 callId = 1;
    public static final int CALLID_FIELD_NUMBER = 1;
    private boolean hasCallId;
    private int callId_ = 0;
    public boolean hasCallId() { return hasCallId; }
    public int getCallId() { return callId_; }
    
    // optional .com.randioo.mahjong_public_server.protocol.GangData gangData = 2;
    public static final int GANGDATA_FIELD_NUMBER = 2;
    private boolean hasGangData;
    private com.randioo.mahjong_public_server.protocol.Entity.GangData gangData_;
    public boolean hasGangData() { return hasGangData; }
    public com.randioo.mahjong_public_server.protocol.Entity.GangData getGangData() { return gangData_; }
    
    private void initFields() {
      gangData_ = com.randioo.mahjong_public_server.protocol.Entity.GangData.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasCallId()) {
        output.writeInt32(1, getCallId());
      }
      if (hasGangData()) {
        output.writeMessage(2, getGangData());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasCallId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getCallId());
      }
      if (hasGangData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getGangData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.mahjong_public_server.protocol.Entity.CallGangData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallGangData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallGangData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallGangData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallGangData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallGangData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallGangData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallGangData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallGangData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallGangData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.mahjong_public_server.protocol.Entity.CallGangData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.mahjong_public_server.protocol.Entity.CallGangData result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Entity.CallGangData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.mahjong_public_server.protocol.Entity.CallGangData();
        return builder;
      }
      
      protected com.randioo.mahjong_public_server.protocol.Entity.CallGangData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.mahjong_public_server.protocol.Entity.CallGangData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.CallGangData.getDescriptor();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.CallGangData getDefaultInstanceForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.CallGangData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.mahjong_public_server.protocol.Entity.CallGangData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.mahjong_public_server.protocol.Entity.CallGangData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.CallGangData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.mahjong_public_server.protocol.Entity.CallGangData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.mahjong_public_server.protocol.Entity.CallGangData) {
          return mergeFrom((com.randioo.mahjong_public_server.protocol.Entity.CallGangData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.mahjong_public_server.protocol.Entity.CallGangData other) {
        if (other == com.randioo.mahjong_public_server.protocol.Entity.CallGangData.getDefaultInstance()) return this;
        if (other.hasCallId()) {
          setCallId(other.getCallId());
        }
        if (other.hasGangData()) {
          mergeGangData(other.getGangData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setCallId(input.readInt32());
              break;
            }
            case 18: {
              com.randioo.mahjong_public_server.protocol.Entity.GangData.Builder subBuilder = com.randioo.mahjong_public_server.protocol.Entity.GangData.newBuilder();
              if (hasGangData()) {
                subBuilder.mergeFrom(getGangData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGangData(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional int32 callId = 1;
      public boolean hasCallId() {
        return result.hasCallId();
      }
      public int getCallId() {
        return result.getCallId();
      }
      public Builder setCallId(int value) {
        result.hasCallId = true;
        result.callId_ = value;
        return this;
      }
      public Builder clearCallId() {
        result.hasCallId = false;
        result.callId_ = 0;
        return this;
      }
      
      // optional .com.randioo.mahjong_public_server.protocol.GangData gangData = 2;
      public boolean hasGangData() {
        return result.hasGangData();
      }
      public com.randioo.mahjong_public_server.protocol.Entity.GangData getGangData() {
        return result.getGangData();
      }
      public Builder setGangData(com.randioo.mahjong_public_server.protocol.Entity.GangData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGangData = true;
        result.gangData_ = value;
        return this;
      }
      public Builder setGangData(com.randioo.mahjong_public_server.protocol.Entity.GangData.Builder builderForValue) {
        result.hasGangData = true;
        result.gangData_ = builderForValue.build();
        return this;
      }
      public Builder mergeGangData(com.randioo.mahjong_public_server.protocol.Entity.GangData value) {
        if (result.hasGangData() &&
            result.gangData_ != com.randioo.mahjong_public_server.protocol.Entity.GangData.getDefaultInstance()) {
          result.gangData_ =
            com.randioo.mahjong_public_server.protocol.Entity.GangData.newBuilder(result.gangData_).mergeFrom(value).buildPartial();
        } else {
          result.gangData_ = value;
        }
        result.hasGangData = true;
        return this;
      }
      public Builder clearGangData() {
        result.hasGangData = false;
        result.gangData_ = com.randioo.mahjong_public_server.protocol.Entity.GangData.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.CallGangData)
    }
    
    static {
      defaultInstance = new CallGangData(true);
      com.randioo.mahjong_public_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.CallGangData)
  }
  
  public static final class GangData extends
      com.google.protobuf.GeneratedMessage {
    // Use GangData.newBuilder() to construct.
    private GangData() {
      initFields();
    }
    private GangData(boolean noInit) {}
    
    private static final GangData defaultInstance;
    public static GangData getDefaultInstance() {
      return defaultInstance;
    }
    
    public GangData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_GangData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_GangData_fieldAccessorTable;
    }
    
    // repeated int32 card = 2;
    public static final int CARD_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> card_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getCardList() {
      return card_;
    }
    public int getCardCount() { return card_.size(); }
    public int getCard(int index) {
      return card_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int element : getCardList()) {
        output.writeInt32(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (int element : getCardList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getCardList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.mahjong_public_server.protocol.Entity.GangData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GangData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GangData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GangData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GangData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GangData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GangData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GangData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GangData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GangData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.mahjong_public_server.protocol.Entity.GangData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.mahjong_public_server.protocol.Entity.GangData result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Entity.GangData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.mahjong_public_server.protocol.Entity.GangData();
        return builder;
      }
      
      protected com.randioo.mahjong_public_server.protocol.Entity.GangData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.mahjong_public_server.protocol.Entity.GangData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.GangData.getDescriptor();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.GangData getDefaultInstanceForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.GangData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.mahjong_public_server.protocol.Entity.GangData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.mahjong_public_server.protocol.Entity.GangData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.GangData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.card_ != java.util.Collections.EMPTY_LIST) {
          result.card_ =
            java.util.Collections.unmodifiableList(result.card_);
        }
        com.randioo.mahjong_public_server.protocol.Entity.GangData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.mahjong_public_server.protocol.Entity.GangData) {
          return mergeFrom((com.randioo.mahjong_public_server.protocol.Entity.GangData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.mahjong_public_server.protocol.Entity.GangData other) {
        if (other == com.randioo.mahjong_public_server.protocol.Entity.GangData.getDefaultInstance()) return this;
        if (!other.card_.isEmpty()) {
          if (result.card_.isEmpty()) {
            result.card_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.card_.addAll(other.card_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 16: {
              addCard(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addCard(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // repeated int32 card = 2;
      public java.util.List<java.lang.Integer> getCardList() {
        return java.util.Collections.unmodifiableList(result.card_);
      }
      public int getCardCount() {
        return result.getCardCount();
      }
      public int getCard(int index) {
        return result.getCard(index);
      }
      public Builder setCard(int index, int value) {
        result.card_.set(index, value);
        return this;
      }
      public Builder addCard(int value) {
        if (result.card_.isEmpty()) {
          result.card_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.card_.add(value);
        return this;
      }
      public Builder addAllCard(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.card_.isEmpty()) {
          result.card_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.card_);
        return this;
      }
      public Builder clearCard() {
        result.card_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.GangData)
    }
    
    static {
      defaultInstance = new GangData(true);
      com.randioo.mahjong_public_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.GangData)
  }
  
  public static final class CallPengData extends
      com.google.protobuf.GeneratedMessage {
    // Use CallPengData.newBuilder() to construct.
    private CallPengData() {
      initFields();
    }
    private CallPengData(boolean noInit) {}
    
    private static final CallPengData defaultInstance;
    public static CallPengData getDefaultInstance() {
      return defaultInstance;
    }
    
    public CallPengData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_CallPengData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_CallPengData_fieldAccessorTable;
    }
    
    // optional int32 callId = 1;
    public static final int CALLID_FIELD_NUMBER = 1;
    private boolean hasCallId;
    private int callId_ = 0;
    public boolean hasCallId() { return hasCallId; }
    public int getCallId() { return callId_; }
    
    // optional .com.randioo.mahjong_public_server.protocol.PengData pengData = 2;
    public static final int PENGDATA_FIELD_NUMBER = 2;
    private boolean hasPengData;
    private com.randioo.mahjong_public_server.protocol.Entity.PengData pengData_;
    public boolean hasPengData() { return hasPengData; }
    public com.randioo.mahjong_public_server.protocol.Entity.PengData getPengData() { return pengData_; }
    
    private void initFields() {
      pengData_ = com.randioo.mahjong_public_server.protocol.Entity.PengData.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasCallId()) {
        output.writeInt32(1, getCallId());
      }
      if (hasPengData()) {
        output.writeMessage(2, getPengData());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasCallId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getCallId());
      }
      if (hasPengData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPengData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.mahjong_public_server.protocol.Entity.CallPengData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallPengData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallPengData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallPengData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallPengData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallPengData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallPengData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallPengData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallPengData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallPengData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.mahjong_public_server.protocol.Entity.CallPengData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.mahjong_public_server.protocol.Entity.CallPengData result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Entity.CallPengData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.mahjong_public_server.protocol.Entity.CallPengData();
        return builder;
      }
      
      protected com.randioo.mahjong_public_server.protocol.Entity.CallPengData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.mahjong_public_server.protocol.Entity.CallPengData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.CallPengData.getDescriptor();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.CallPengData getDefaultInstanceForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.CallPengData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.mahjong_public_server.protocol.Entity.CallPengData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.mahjong_public_server.protocol.Entity.CallPengData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.CallPengData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.mahjong_public_server.protocol.Entity.CallPengData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.mahjong_public_server.protocol.Entity.CallPengData) {
          return mergeFrom((com.randioo.mahjong_public_server.protocol.Entity.CallPengData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.mahjong_public_server.protocol.Entity.CallPengData other) {
        if (other == com.randioo.mahjong_public_server.protocol.Entity.CallPengData.getDefaultInstance()) return this;
        if (other.hasCallId()) {
          setCallId(other.getCallId());
        }
        if (other.hasPengData()) {
          mergePengData(other.getPengData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setCallId(input.readInt32());
              break;
            }
            case 18: {
              com.randioo.mahjong_public_server.protocol.Entity.PengData.Builder subBuilder = com.randioo.mahjong_public_server.protocol.Entity.PengData.newBuilder();
              if (hasPengData()) {
                subBuilder.mergeFrom(getPengData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPengData(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional int32 callId = 1;
      public boolean hasCallId() {
        return result.hasCallId();
      }
      public int getCallId() {
        return result.getCallId();
      }
      public Builder setCallId(int value) {
        result.hasCallId = true;
        result.callId_ = value;
        return this;
      }
      public Builder clearCallId() {
        result.hasCallId = false;
        result.callId_ = 0;
        return this;
      }
      
      // optional .com.randioo.mahjong_public_server.protocol.PengData pengData = 2;
      public boolean hasPengData() {
        return result.hasPengData();
      }
      public com.randioo.mahjong_public_server.protocol.Entity.PengData getPengData() {
        return result.getPengData();
      }
      public Builder setPengData(com.randioo.mahjong_public_server.protocol.Entity.PengData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPengData = true;
        result.pengData_ = value;
        return this;
      }
      public Builder setPengData(com.randioo.mahjong_public_server.protocol.Entity.PengData.Builder builderForValue) {
        result.hasPengData = true;
        result.pengData_ = builderForValue.build();
        return this;
      }
      public Builder mergePengData(com.randioo.mahjong_public_server.protocol.Entity.PengData value) {
        if (result.hasPengData() &&
            result.pengData_ != com.randioo.mahjong_public_server.protocol.Entity.PengData.getDefaultInstance()) {
          result.pengData_ =
            com.randioo.mahjong_public_server.protocol.Entity.PengData.newBuilder(result.pengData_).mergeFrom(value).buildPartial();
        } else {
          result.pengData_ = value;
        }
        result.hasPengData = true;
        return this;
      }
      public Builder clearPengData() {
        result.hasPengData = false;
        result.pengData_ = com.randioo.mahjong_public_server.protocol.Entity.PengData.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.CallPengData)
    }
    
    static {
      defaultInstance = new CallPengData(true);
      com.randioo.mahjong_public_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.CallPengData)
  }
  
  public static final class PengData extends
      com.google.protobuf.GeneratedMessage {
    // Use PengData.newBuilder() to construct.
    private PengData() {
      initFields();
    }
    private PengData(boolean noInit) {}
    
    private static final PengData defaultInstance;
    public static PengData getDefaultInstance() {
      return defaultInstance;
    }
    
    public PengData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_PengData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_PengData_fieldAccessorTable;
    }
    
    // optional int32 targetSeat = 1;
    public static final int TARGETSEAT_FIELD_NUMBER = 1;
    private boolean hasTargetSeat;
    private int targetSeat_ = 0;
    public boolean hasTargetSeat() { return hasTargetSeat; }
    public int getTargetSeat() { return targetSeat_; }
    
    // optional int32 card = 2;
    public static final int CARD_FIELD_NUMBER = 2;
    private boolean hasCard;
    private int card_ = 0;
    public boolean hasCard() { return hasCard; }
    public int getCard() { return card_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasTargetSeat()) {
        output.writeInt32(1, getTargetSeat());
      }
      if (hasCard()) {
        output.writeInt32(2, getCard());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTargetSeat()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getTargetSeat());
      }
      if (hasCard()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getCard());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.mahjong_public_server.protocol.Entity.PengData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.PengData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.PengData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.PengData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.PengData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.PengData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.PengData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.PengData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.PengData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.PengData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.mahjong_public_server.protocol.Entity.PengData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.mahjong_public_server.protocol.Entity.PengData result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Entity.PengData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.mahjong_public_server.protocol.Entity.PengData();
        return builder;
      }
      
      protected com.randioo.mahjong_public_server.protocol.Entity.PengData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.mahjong_public_server.protocol.Entity.PengData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.PengData.getDescriptor();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.PengData getDefaultInstanceForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.PengData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.mahjong_public_server.protocol.Entity.PengData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.mahjong_public_server.protocol.Entity.PengData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.PengData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.mahjong_public_server.protocol.Entity.PengData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.mahjong_public_server.protocol.Entity.PengData) {
          return mergeFrom((com.randioo.mahjong_public_server.protocol.Entity.PengData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.mahjong_public_server.protocol.Entity.PengData other) {
        if (other == com.randioo.mahjong_public_server.protocol.Entity.PengData.getDefaultInstance()) return this;
        if (other.hasTargetSeat()) {
          setTargetSeat(other.getTargetSeat());
        }
        if (other.hasCard()) {
          setCard(other.getCard());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setTargetSeat(input.readInt32());
              break;
            }
            case 16: {
              setCard(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional int32 targetSeat = 1;
      public boolean hasTargetSeat() {
        return result.hasTargetSeat();
      }
      public int getTargetSeat() {
        return result.getTargetSeat();
      }
      public Builder setTargetSeat(int value) {
        result.hasTargetSeat = true;
        result.targetSeat_ = value;
        return this;
      }
      public Builder clearTargetSeat() {
        result.hasTargetSeat = false;
        result.targetSeat_ = 0;
        return this;
      }
      
      // optional int32 card = 2;
      public boolean hasCard() {
        return result.hasCard();
      }
      public int getCard() {
        return result.getCard();
      }
      public Builder setCard(int value) {
        result.hasCard = true;
        result.card_ = value;
        return this;
      }
      public Builder clearCard() {
        result.hasCard = false;
        result.card_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.PengData)
    }
    
    static {
      defaultInstance = new PengData(true);
      com.randioo.mahjong_public_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.PengData)
  }
  
  public static final class CallHuData extends
      com.google.protobuf.GeneratedMessage {
    // Use CallHuData.newBuilder() to construct.
    private CallHuData() {
      initFields();
    }
    private CallHuData(boolean noInit) {}
    
    private static final CallHuData defaultInstance;
    public static CallHuData getDefaultInstance() {
      return defaultInstance;
    }
    
    public CallHuData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_CallHuData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_CallHuData_fieldAccessorTable;
    }
    
    // optional int32 callId = 1;
    public static final int CALLID_FIELD_NUMBER = 1;
    private boolean hasCallId;
    private int callId_ = 0;
    public boolean hasCallId() { return hasCallId; }
    public int getCallId() { return callId_; }
    
    // optional .com.randioo.mahjong_public_server.protocol.HuData huData = 2;
    public static final int HUDATA_FIELD_NUMBER = 2;
    private boolean hasHuData;
    private com.randioo.mahjong_public_server.protocol.Entity.HuData huData_;
    public boolean hasHuData() { return hasHuData; }
    public com.randioo.mahjong_public_server.protocol.Entity.HuData getHuData() { return huData_; }
    
    private void initFields() {
      huData_ = com.randioo.mahjong_public_server.protocol.Entity.HuData.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasCallId()) {
        output.writeInt32(1, getCallId());
      }
      if (hasHuData()) {
        output.writeMessage(2, getHuData());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasCallId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getCallId());
      }
      if (hasHuData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getHuData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.mahjong_public_server.protocol.Entity.CallHuData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallHuData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallHuData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallHuData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallHuData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallHuData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallHuData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallHuData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallHuData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallHuData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.mahjong_public_server.protocol.Entity.CallHuData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.mahjong_public_server.protocol.Entity.CallHuData result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Entity.CallHuData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.mahjong_public_server.protocol.Entity.CallHuData();
        return builder;
      }
      
      protected com.randioo.mahjong_public_server.protocol.Entity.CallHuData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.mahjong_public_server.protocol.Entity.CallHuData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.CallHuData.getDescriptor();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.CallHuData getDefaultInstanceForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.CallHuData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.mahjong_public_server.protocol.Entity.CallHuData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.mahjong_public_server.protocol.Entity.CallHuData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.CallHuData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.mahjong_public_server.protocol.Entity.CallHuData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.mahjong_public_server.protocol.Entity.CallHuData) {
          return mergeFrom((com.randioo.mahjong_public_server.protocol.Entity.CallHuData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.mahjong_public_server.protocol.Entity.CallHuData other) {
        if (other == com.randioo.mahjong_public_server.protocol.Entity.CallHuData.getDefaultInstance()) return this;
        if (other.hasCallId()) {
          setCallId(other.getCallId());
        }
        if (other.hasHuData()) {
          mergeHuData(other.getHuData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setCallId(input.readInt32());
              break;
            }
            case 18: {
              com.randioo.mahjong_public_server.protocol.Entity.HuData.Builder subBuilder = com.randioo.mahjong_public_server.protocol.Entity.HuData.newBuilder();
              if (hasHuData()) {
                subBuilder.mergeFrom(getHuData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setHuData(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional int32 callId = 1;
      public boolean hasCallId() {
        return result.hasCallId();
      }
      public int getCallId() {
        return result.getCallId();
      }
      public Builder setCallId(int value) {
        result.hasCallId = true;
        result.callId_ = value;
        return this;
      }
      public Builder clearCallId() {
        result.hasCallId = false;
        result.callId_ = 0;
        return this;
      }
      
      // optional .com.randioo.mahjong_public_server.protocol.HuData huData = 2;
      public boolean hasHuData() {
        return result.hasHuData();
      }
      public com.randioo.mahjong_public_server.protocol.Entity.HuData getHuData() {
        return result.getHuData();
      }
      public Builder setHuData(com.randioo.mahjong_public_server.protocol.Entity.HuData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasHuData = true;
        result.huData_ = value;
        return this;
      }
      public Builder setHuData(com.randioo.mahjong_public_server.protocol.Entity.HuData.Builder builderForValue) {
        result.hasHuData = true;
        result.huData_ = builderForValue.build();
        return this;
      }
      public Builder mergeHuData(com.randioo.mahjong_public_server.protocol.Entity.HuData value) {
        if (result.hasHuData() &&
            result.huData_ != com.randioo.mahjong_public_server.protocol.Entity.HuData.getDefaultInstance()) {
          result.huData_ =
            com.randioo.mahjong_public_server.protocol.Entity.HuData.newBuilder(result.huData_).mergeFrom(value).buildPartial();
        } else {
          result.huData_ = value;
        }
        result.hasHuData = true;
        return this;
      }
      public Builder clearHuData() {
        result.hasHuData = false;
        result.huData_ = com.randioo.mahjong_public_server.protocol.Entity.HuData.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.CallHuData)
    }
    
    static {
      defaultInstance = new CallHuData(true);
      com.randioo.mahjong_public_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.CallHuData)
  }
  
  public static final class HuData extends
      com.google.protobuf.GeneratedMessage {
    // Use HuData.newBuilder() to construct.
    private HuData() {
      initFields();
    }
    private HuData(boolean noInit) {}
    
    private static final HuData defaultInstance;
    public static HuData getDefaultInstance() {
      return defaultInstance;
    }
    
    public HuData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_HuData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_HuData_fieldAccessorTable;
    }
    
    // repeated int32 card = 2;
    public static final int CARD_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> card_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getCardList() {
      return card_;
    }
    public int getCardCount() { return card_.size(); }
    public int getCard(int index) {
      return card_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int element : getCardList()) {
        output.writeInt32(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (int element : getCardList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getCardList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.mahjong_public_server.protocol.Entity.HuData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.HuData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.HuData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.HuData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.HuData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.HuData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.HuData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.HuData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.HuData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.HuData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.mahjong_public_server.protocol.Entity.HuData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.mahjong_public_server.protocol.Entity.HuData result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Entity.HuData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.mahjong_public_server.protocol.Entity.HuData();
        return builder;
      }
      
      protected com.randioo.mahjong_public_server.protocol.Entity.HuData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.mahjong_public_server.protocol.Entity.HuData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.HuData.getDescriptor();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.HuData getDefaultInstanceForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.HuData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.mahjong_public_server.protocol.Entity.HuData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.mahjong_public_server.protocol.Entity.HuData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.HuData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.card_ != java.util.Collections.EMPTY_LIST) {
          result.card_ =
            java.util.Collections.unmodifiableList(result.card_);
        }
        com.randioo.mahjong_public_server.protocol.Entity.HuData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.mahjong_public_server.protocol.Entity.HuData) {
          return mergeFrom((com.randioo.mahjong_public_server.protocol.Entity.HuData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.mahjong_public_server.protocol.Entity.HuData other) {
        if (other == com.randioo.mahjong_public_server.protocol.Entity.HuData.getDefaultInstance()) return this;
        if (!other.card_.isEmpty()) {
          if (result.card_.isEmpty()) {
            result.card_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.card_.addAll(other.card_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 16: {
              addCard(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addCard(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // repeated int32 card = 2;
      public java.util.List<java.lang.Integer> getCardList() {
        return java.util.Collections.unmodifiableList(result.card_);
      }
      public int getCardCount() {
        return result.getCardCount();
      }
      public int getCard(int index) {
        return result.getCard(index);
      }
      public Builder setCard(int index, int value) {
        result.card_.set(index, value);
        return this;
      }
      public Builder addCard(int value) {
        if (result.card_.isEmpty()) {
          result.card_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.card_.add(value);
        return this;
      }
      public Builder addAllCard(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.card_.isEmpty()) {
          result.card_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.card_);
        return this;
      }
      public Builder clearCard() {
        result.card_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.HuData)
    }
    
    static {
      defaultInstance = new HuData(true);
      com.randioo.mahjong_public_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.HuData)
  }
  
  public static final class CallChiData extends
      com.google.protobuf.GeneratedMessage {
    // Use CallChiData.newBuilder() to construct.
    private CallChiData() {
      initFields();
    }
    private CallChiData(boolean noInit) {}
    
    private static final CallChiData defaultInstance;
    public static CallChiData getDefaultInstance() {
      return defaultInstance;
    }
    
    public CallChiData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_CallChiData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_CallChiData_fieldAccessorTable;
    }
    
    // optional int32 callId = 1;
    public static final int CALLID_FIELD_NUMBER = 1;
    private boolean hasCallId;
    private int callId_ = 0;
    public boolean hasCallId() { return hasCallId; }
    public int getCallId() { return callId_; }
    
    // optional .com.randioo.mahjong_public_server.protocol.ChiData chiData = 2;
    public static final int CHIDATA_FIELD_NUMBER = 2;
    private boolean hasChiData;
    private com.randioo.mahjong_public_server.protocol.Entity.ChiData chiData_;
    public boolean hasChiData() { return hasChiData; }
    public com.randioo.mahjong_public_server.protocol.Entity.ChiData getChiData() { return chiData_; }
    
    private void initFields() {
      chiData_ = com.randioo.mahjong_public_server.protocol.Entity.ChiData.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasCallId()) {
        output.writeInt32(1, getCallId());
      }
      if (hasChiData()) {
        output.writeMessage(2, getChiData());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasCallId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getCallId());
      }
      if (hasChiData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getChiData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.mahjong_public_server.protocol.Entity.CallChiData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallChiData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallChiData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallChiData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallChiData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallChiData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallChiData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallChiData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallChiData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.CallChiData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.mahjong_public_server.protocol.Entity.CallChiData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.mahjong_public_server.protocol.Entity.CallChiData result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Entity.CallChiData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.mahjong_public_server.protocol.Entity.CallChiData();
        return builder;
      }
      
      protected com.randioo.mahjong_public_server.protocol.Entity.CallChiData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.mahjong_public_server.protocol.Entity.CallChiData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.CallChiData.getDescriptor();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.CallChiData getDefaultInstanceForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.CallChiData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.mahjong_public_server.protocol.Entity.CallChiData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.mahjong_public_server.protocol.Entity.CallChiData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.CallChiData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.mahjong_public_server.protocol.Entity.CallChiData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.mahjong_public_server.protocol.Entity.CallChiData) {
          return mergeFrom((com.randioo.mahjong_public_server.protocol.Entity.CallChiData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.mahjong_public_server.protocol.Entity.CallChiData other) {
        if (other == com.randioo.mahjong_public_server.protocol.Entity.CallChiData.getDefaultInstance()) return this;
        if (other.hasCallId()) {
          setCallId(other.getCallId());
        }
        if (other.hasChiData()) {
          mergeChiData(other.getChiData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setCallId(input.readInt32());
              break;
            }
            case 18: {
              com.randioo.mahjong_public_server.protocol.Entity.ChiData.Builder subBuilder = com.randioo.mahjong_public_server.protocol.Entity.ChiData.newBuilder();
              if (hasChiData()) {
                subBuilder.mergeFrom(getChiData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setChiData(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional int32 callId = 1;
      public boolean hasCallId() {
        return result.hasCallId();
      }
      public int getCallId() {
        return result.getCallId();
      }
      public Builder setCallId(int value) {
        result.hasCallId = true;
        result.callId_ = value;
        return this;
      }
      public Builder clearCallId() {
        result.hasCallId = false;
        result.callId_ = 0;
        return this;
      }
      
      // optional .com.randioo.mahjong_public_server.protocol.ChiData chiData = 2;
      public boolean hasChiData() {
        return result.hasChiData();
      }
      public com.randioo.mahjong_public_server.protocol.Entity.ChiData getChiData() {
        return result.getChiData();
      }
      public Builder setChiData(com.randioo.mahjong_public_server.protocol.Entity.ChiData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasChiData = true;
        result.chiData_ = value;
        return this;
      }
      public Builder setChiData(com.randioo.mahjong_public_server.protocol.Entity.ChiData.Builder builderForValue) {
        result.hasChiData = true;
        result.chiData_ = builderForValue.build();
        return this;
      }
      public Builder mergeChiData(com.randioo.mahjong_public_server.protocol.Entity.ChiData value) {
        if (result.hasChiData() &&
            result.chiData_ != com.randioo.mahjong_public_server.protocol.Entity.ChiData.getDefaultInstance()) {
          result.chiData_ =
            com.randioo.mahjong_public_server.protocol.Entity.ChiData.newBuilder(result.chiData_).mergeFrom(value).buildPartial();
        } else {
          result.chiData_ = value;
        }
        result.hasChiData = true;
        return this;
      }
      public Builder clearChiData() {
        result.hasChiData = false;
        result.chiData_ = com.randioo.mahjong_public_server.protocol.Entity.ChiData.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.CallChiData)
    }
    
    static {
      defaultInstance = new CallChiData(true);
      com.randioo.mahjong_public_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.CallChiData)
  }
  
  public static final class ChiData extends
      com.google.protobuf.GeneratedMessage {
    // Use ChiData.newBuilder() to construct.
    private ChiData() {
      initFields();
    }
    private ChiData(boolean noInit) {}
    
    private static final ChiData defaultInstance;
    public static ChiData getDefaultInstance() {
      return defaultInstance;
    }
    
    public ChiData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_ChiData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_ChiData_fieldAccessorTable;
    }
    
    // optional int32 card1 = 2;
    public static final int CARD1_FIELD_NUMBER = 2;
    private boolean hasCard1;
    private int card1_ = 0;
    public boolean hasCard1() { return hasCard1; }
    public int getCard1() { return card1_; }
    
    // optional int32 card2 = 3;
    public static final int CARD2_FIELD_NUMBER = 3;
    private boolean hasCard2;
    private int card2_ = 0;
    public boolean hasCard2() { return hasCard2; }
    public int getCard2() { return card2_; }
    
    // optional int32 card3 = 4;
    public static final int CARD3_FIELD_NUMBER = 4;
    private boolean hasCard3;
    private int card3_ = 0;
    public boolean hasCard3() { return hasCard3; }
    public int getCard3() { return card3_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasCard1()) {
        output.writeInt32(2, getCard1());
      }
      if (hasCard2()) {
        output.writeInt32(3, getCard2());
      }
      if (hasCard3()) {
        output.writeInt32(4, getCard3());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasCard1()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getCard1());
      }
      if (hasCard2()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getCard2());
      }
      if (hasCard3()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getCard3());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.mahjong_public_server.protocol.Entity.ChiData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.ChiData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.ChiData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.ChiData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.ChiData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.ChiData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.ChiData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.ChiData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.ChiData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.ChiData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.mahjong_public_server.protocol.Entity.ChiData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.mahjong_public_server.protocol.Entity.ChiData result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Entity.ChiData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.mahjong_public_server.protocol.Entity.ChiData();
        return builder;
      }
      
      protected com.randioo.mahjong_public_server.protocol.Entity.ChiData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.mahjong_public_server.protocol.Entity.ChiData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.ChiData.getDescriptor();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.ChiData getDefaultInstanceForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.ChiData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.mahjong_public_server.protocol.Entity.ChiData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.mahjong_public_server.protocol.Entity.ChiData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.ChiData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.mahjong_public_server.protocol.Entity.ChiData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.mahjong_public_server.protocol.Entity.ChiData) {
          return mergeFrom((com.randioo.mahjong_public_server.protocol.Entity.ChiData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.mahjong_public_server.protocol.Entity.ChiData other) {
        if (other == com.randioo.mahjong_public_server.protocol.Entity.ChiData.getDefaultInstance()) return this;
        if (other.hasCard1()) {
          setCard1(other.getCard1());
        }
        if (other.hasCard2()) {
          setCard2(other.getCard2());
        }
        if (other.hasCard3()) {
          setCard3(other.getCard3());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 16: {
              setCard1(input.readInt32());
              break;
            }
            case 24: {
              setCard2(input.readInt32());
              break;
            }
            case 32: {
              setCard3(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional int32 card1 = 2;
      public boolean hasCard1() {
        return result.hasCard1();
      }
      public int getCard1() {
        return result.getCard1();
      }
      public Builder setCard1(int value) {
        result.hasCard1 = true;
        result.card1_ = value;
        return this;
      }
      public Builder clearCard1() {
        result.hasCard1 = false;
        result.card1_ = 0;
        return this;
      }
      
      // optional int32 card2 = 3;
      public boolean hasCard2() {
        return result.hasCard2();
      }
      public int getCard2() {
        return result.getCard2();
      }
      public Builder setCard2(int value) {
        result.hasCard2 = true;
        result.card2_ = value;
        return this;
      }
      public Builder clearCard2() {
        result.hasCard2 = false;
        result.card2_ = 0;
        return this;
      }
      
      // optional int32 card3 = 4;
      public boolean hasCard3() {
        return result.hasCard3();
      }
      public int getCard3() {
        return result.getCard3();
      }
      public Builder setCard3(int value) {
        result.hasCard3 = true;
        result.card3_ = value;
        return this;
      }
      public Builder clearCard3() {
        result.hasCard3 = false;
        result.card3_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.ChiData)
    }
    
    static {
      defaultInstance = new ChiData(true);
      com.randioo.mahjong_public_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.ChiData)
  }
  
  public static final class GameOverData extends
      com.google.protobuf.GeneratedMessage {
    // Use GameOverData.newBuilder() to construct.
    private GameOverData() {
      initFields();
    }
    private GameOverData(boolean noInit) {}
    
    private static final GameOverData defaultInstance;
    public static GameOverData getDefaultInstance() {
      return defaultInstance;
    }
    
    public GameOverData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_GameOverData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_GameOverData_fieldAccessorTable;
    }
    
    // optional string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional int32 landLordNum = 2;
    public static final int LANDLORDNUM_FIELD_NUMBER = 2;
    private boolean hasLandLordNum;
    private int landLordNum_ = 0;
    public boolean hasLandLordNum() { return hasLandLordNum; }
    public int getLandLordNum() { return landLordNum_; }
    
    // optional int32 farmerNum = 3;
    public static final int FARMERNUM_FIELD_NUMBER = 3;
    private boolean hasFarmerNum;
    private int farmerNum_ = 0;
    public boolean hasFarmerNum() { return hasFarmerNum; }
    public int getFarmerNum() { return farmerNum_; }
    
    // optional int32 score = 4;
    public static final int SCORE_FIELD_NUMBER = 4;
    private boolean hasScore;
    private int score_ = 0;
    public boolean hasScore() { return hasScore; }
    public int getScore() { return score_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasLandLordNum()) {
        output.writeInt32(2, getLandLordNum());
      }
      if (hasFarmerNum()) {
        output.writeInt32(3, getFarmerNum());
      }
      if (hasScore()) {
        output.writeInt32(4, getScore());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasLandLordNum()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getLandLordNum());
      }
      if (hasFarmerNum()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getFarmerNum());
      }
      if (hasScore()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getScore());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.mahjong_public_server.protocol.Entity.GameOverData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameOverData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameOverData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameOverData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameOverData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameOverData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameOverData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameOverData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameOverData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameOverData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.mahjong_public_server.protocol.Entity.GameOverData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.mahjong_public_server.protocol.Entity.GameOverData result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Entity.GameOverData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.mahjong_public_server.protocol.Entity.GameOverData();
        return builder;
      }
      
      protected com.randioo.mahjong_public_server.protocol.Entity.GameOverData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.mahjong_public_server.protocol.Entity.GameOverData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.GameOverData.getDescriptor();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.GameOverData getDefaultInstanceForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.GameOverData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.mahjong_public_server.protocol.Entity.GameOverData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.mahjong_public_server.protocol.Entity.GameOverData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.GameOverData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.mahjong_public_server.protocol.Entity.GameOverData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.mahjong_public_server.protocol.Entity.GameOverData) {
          return mergeFrom((com.randioo.mahjong_public_server.protocol.Entity.GameOverData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.mahjong_public_server.protocol.Entity.GameOverData other) {
        if (other == com.randioo.mahjong_public_server.protocol.Entity.GameOverData.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasLandLordNum()) {
          setLandLordNum(other.getLandLordNum());
        }
        if (other.hasFarmerNum()) {
          setFarmerNum(other.getFarmerNum());
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 16: {
              setLandLordNum(input.readInt32());
              break;
            }
            case 24: {
              setFarmerNum(input.readInt32());
              break;
            }
            case 32: {
              setScore(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional int32 landLordNum = 2;
      public boolean hasLandLordNum() {
        return result.hasLandLordNum();
      }
      public int getLandLordNum() {
        return result.getLandLordNum();
      }
      public Builder setLandLordNum(int value) {
        result.hasLandLordNum = true;
        result.landLordNum_ = value;
        return this;
      }
      public Builder clearLandLordNum() {
        result.hasLandLordNum = false;
        result.landLordNum_ = 0;
        return this;
      }
      
      // optional int32 farmerNum = 3;
      public boolean hasFarmerNum() {
        return result.hasFarmerNum();
      }
      public int getFarmerNum() {
        return result.getFarmerNum();
      }
      public Builder setFarmerNum(int value) {
        result.hasFarmerNum = true;
        result.farmerNum_ = value;
        return this;
      }
      public Builder clearFarmerNum() {
        result.hasFarmerNum = false;
        result.farmerNum_ = 0;
        return this;
      }
      
      // optional int32 score = 4;
      public boolean hasScore() {
        return result.hasScore();
      }
      public int getScore() {
        return result.getScore();
      }
      public Builder setScore(int value) {
        result.hasScore = true;
        result.score_ = value;
        return this;
      }
      public Builder clearScore() {
        result.hasScore = false;
        result.score_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.GameOverData)
    }
    
    static {
      defaultInstance = new GameOverData(true);
      com.randioo.mahjong_public_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.GameOverData)
  }
  
  public static final class RecommandPai extends
      com.google.protobuf.GeneratedMessage {
    // Use RecommandPai.newBuilder() to construct.
    private RecommandPai() {
      initFields();
    }
    private RecommandPai(boolean noInit) {}
    
    private static final RecommandPai defaultInstance;
    public static RecommandPai getDefaultInstance() {
      return defaultInstance;
    }
    
    public RecommandPai getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_RecommandPai_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_RecommandPai_fieldAccessorTable;
    }
    
    // repeated int32 pai = 1;
    public static final int PAI_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> pai_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getPaiList() {
      return pai_;
    }
    public int getPaiCount() { return pai_.size(); }
    public int getPai(int index) {
      return pai_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int element : getPaiList()) {
        output.writeInt32(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (int element : getPaiList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getPaiList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.mahjong_public_server.protocol.Entity.RecommandPai parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.RecommandPai parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.RecommandPai parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.RecommandPai parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.RecommandPai parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.RecommandPai parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.RecommandPai parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.RecommandPai parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.RecommandPai parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.RecommandPai parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.mahjong_public_server.protocol.Entity.RecommandPai prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.mahjong_public_server.protocol.Entity.RecommandPai result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Entity.RecommandPai.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.mahjong_public_server.protocol.Entity.RecommandPai();
        return builder;
      }
      
      protected com.randioo.mahjong_public_server.protocol.Entity.RecommandPai internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.mahjong_public_server.protocol.Entity.RecommandPai();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.RecommandPai.getDescriptor();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.RecommandPai getDefaultInstanceForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.RecommandPai.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.mahjong_public_server.protocol.Entity.RecommandPai build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.mahjong_public_server.protocol.Entity.RecommandPai buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.RecommandPai buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.pai_ != java.util.Collections.EMPTY_LIST) {
          result.pai_ =
            java.util.Collections.unmodifiableList(result.pai_);
        }
        com.randioo.mahjong_public_server.protocol.Entity.RecommandPai returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.mahjong_public_server.protocol.Entity.RecommandPai) {
          return mergeFrom((com.randioo.mahjong_public_server.protocol.Entity.RecommandPai)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.mahjong_public_server.protocol.Entity.RecommandPai other) {
        if (other == com.randioo.mahjong_public_server.protocol.Entity.RecommandPai.getDefaultInstance()) return this;
        if (!other.pai_.isEmpty()) {
          if (result.pai_.isEmpty()) {
            result.pai_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.pai_.addAll(other.pai_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              addPai(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addPai(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // repeated int32 pai = 1;
      public java.util.List<java.lang.Integer> getPaiList() {
        return java.util.Collections.unmodifiableList(result.pai_);
      }
      public int getPaiCount() {
        return result.getPaiCount();
      }
      public int getPai(int index) {
        return result.getPai(index);
      }
      public Builder setPai(int index, int value) {
        result.pai_.set(index, value);
        return this;
      }
      public Builder addPai(int value) {
        if (result.pai_.isEmpty()) {
          result.pai_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.pai_.add(value);
        return this;
      }
      public Builder addAllPai(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.pai_.isEmpty()) {
          result.pai_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.pai_);
        return this;
      }
      public Builder clearPai() {
        result.pai_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.RecommandPai)
    }
    
    static {
      defaultInstance = new RecommandPai(true);
      com.randioo.mahjong_public_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.RecommandPai)
  }
  
  public static final class Score extends
      com.google.protobuf.GeneratedMessage {
    // Use Score.newBuilder() to construct.
    private Score() {
      initFields();
    }
    private Score(boolean noInit) {}
    
    private static final Score defaultInstance;
    public static Score getDefaultInstance() {
      return defaultInstance;
    }
    
    public Score getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_Score_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_Score_fieldAccessorTable;
    }
    
    // optional string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional int32 score = 2;
    public static final int SCORE_FIELD_NUMBER = 2;
    private boolean hasScore;
    private int score_ = 0;
    public boolean hasScore() { return hasScore; }
    public int getScore() { return score_; }
    
    // optional int32 allScore = 3;
    public static final int ALLSCORE_FIELD_NUMBER = 3;
    private boolean hasAllScore;
    private int allScore_ = 0;
    public boolean hasAllScore() { return hasAllScore; }
    public int getAllScore() { return allScore_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasScore()) {
        output.writeInt32(2, getScore());
      }
      if (hasAllScore()) {
        output.writeInt32(3, getAllScore());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasScore()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getScore());
      }
      if (hasAllScore()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getAllScore());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.mahjong_public_server.protocol.Entity.Score parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.Score parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.Score parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.Score parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.Score parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.Score parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.Score parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.Score parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.Score parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.Score parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.mahjong_public_server.protocol.Entity.Score prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.mahjong_public_server.protocol.Entity.Score result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Entity.Score.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.mahjong_public_server.protocol.Entity.Score();
        return builder;
      }
      
      protected com.randioo.mahjong_public_server.protocol.Entity.Score internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.mahjong_public_server.protocol.Entity.Score();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.Score.getDescriptor();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.Score getDefaultInstanceForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.Score.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.mahjong_public_server.protocol.Entity.Score build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.mahjong_public_server.protocol.Entity.Score buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.Score buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.mahjong_public_server.protocol.Entity.Score returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.mahjong_public_server.protocol.Entity.Score) {
          return mergeFrom((com.randioo.mahjong_public_server.protocol.Entity.Score)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.mahjong_public_server.protocol.Entity.Score other) {
        if (other == com.randioo.mahjong_public_server.protocol.Entity.Score.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        if (other.hasAllScore()) {
          setAllScore(other.getAllScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 16: {
              setScore(input.readInt32());
              break;
            }
            case 24: {
              setAllScore(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional int32 score = 2;
      public boolean hasScore() {
        return result.hasScore();
      }
      public int getScore() {
        return result.getScore();
      }
      public Builder setScore(int value) {
        result.hasScore = true;
        result.score_ = value;
        return this;
      }
      public Builder clearScore() {
        result.hasScore = false;
        result.score_ = 0;
        return this;
      }
      
      // optional int32 allScore = 3;
      public boolean hasAllScore() {
        return result.hasAllScore();
      }
      public int getAllScore() {
        return result.getAllScore();
      }
      public Builder setAllScore(int value) {
        result.hasAllScore = true;
        result.allScore_ = value;
        return this;
      }
      public Builder clearAllScore() {
        result.hasAllScore = false;
        result.allScore_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.Score)
    }
    
    static {
      defaultInstance = new Score(true);
      com.randioo.mahjong_public_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.Score)
  }
  
  public static final class GameData extends
      com.google.protobuf.GeneratedMessage {
    // Use GameData.newBuilder() to construct.
    private GameData() {
      initFields();
    }
    private GameData(boolean noInit) {}
    
    private static final GameData defaultInstance;
    public static GameData getDefaultInstance() {
      return defaultInstance;
    }
    
    public GameData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_GameData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.mahjong_public_server.protocol.Entity.internal_static_com_randioo_mahjong_public_server_protocol_GameData_fieldAccessorTable;
    }
    
    // optional int32 gameId = 1;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private boolean hasGameId;
    private int gameId_ = 0;
    public boolean hasGameId() { return hasGameId; }
    public int getGameId() { return gameId_; }
    
    // repeated .com.randioo.mahjong_public_server.protocol.GameRoleData gameRoleData = 2;
    public static final int GAMEROLEDATA_FIELD_NUMBER = 2;
    private java.util.List<com.randioo.mahjong_public_server.protocol.Entity.GameRoleData> gameRoleData_ =
      java.util.Collections.emptyList();
    public java.util.List<com.randioo.mahjong_public_server.protocol.Entity.GameRoleData> getGameRoleDataList() {
      return gameRoleData_;
    }
    public int getGameRoleDataCount() { return gameRoleData_.size(); }
    public com.randioo.mahjong_public_server.protocol.Entity.GameRoleData getGameRoleData(int index) {
      return gameRoleData_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasGameId()) {
        output.writeInt32(1, getGameId());
      }
      for (com.randioo.mahjong_public_server.protocol.Entity.GameRoleData element : getGameRoleDataList()) {
        output.writeMessage(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasGameId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getGameId());
      }
      for (com.randioo.mahjong_public_server.protocol.Entity.GameRoleData element : getGameRoleDataList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.mahjong_public_server.protocol.Entity.GameData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.mahjong_public_server.protocol.Entity.GameData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.mahjong_public_server.protocol.Entity.GameData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.mahjong_public_server.protocol.Entity.GameData result;
      
      // Construct using com.randioo.mahjong_public_server.protocol.Entity.GameData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.mahjong_public_server.protocol.Entity.GameData();
        return builder;
      }
      
      protected com.randioo.mahjong_public_server.protocol.Entity.GameData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.mahjong_public_server.protocol.Entity.GameData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.GameData.getDescriptor();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.GameData getDefaultInstanceForType() {
        return com.randioo.mahjong_public_server.protocol.Entity.GameData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.mahjong_public_server.protocol.Entity.GameData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.mahjong_public_server.protocol.Entity.GameData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.mahjong_public_server.protocol.Entity.GameData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.gameRoleData_ != java.util.Collections.EMPTY_LIST) {
          result.gameRoleData_ =
            java.util.Collections.unmodifiableList(result.gameRoleData_);
        }
        com.randioo.mahjong_public_server.protocol.Entity.GameData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.mahjong_public_server.protocol.Entity.GameData) {
          return mergeFrom((com.randioo.mahjong_public_server.protocol.Entity.GameData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.mahjong_public_server.protocol.Entity.GameData other) {
        if (other == com.randioo.mahjong_public_server.protocol.Entity.GameData.getDefaultInstance()) return this;
        if (other.hasGameId()) {
          setGameId(other.getGameId());
        }
        if (!other.gameRoleData_.isEmpty()) {
          if (result.gameRoleData_.isEmpty()) {
            result.gameRoleData_ = new java.util.ArrayList<com.randioo.mahjong_public_server.protocol.Entity.GameRoleData>();
          }
          result.gameRoleData_.addAll(other.gameRoleData_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setGameId(input.readInt32());
              break;
            }
            case 18: {
              com.randioo.mahjong_public_server.protocol.Entity.GameRoleData.Builder subBuilder = com.randioo.mahjong_public_server.protocol.Entity.GameRoleData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addGameRoleData(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional int32 gameId = 1;
      public boolean hasGameId() {
        return result.hasGameId();
      }
      public int getGameId() {
        return result.getGameId();
      }
      public Builder setGameId(int value) {
        result.hasGameId = true;
        result.gameId_ = value;
        return this;
      }
      public Builder clearGameId() {
        result.hasGameId = false;
        result.gameId_ = 0;
        return this;
      }
      
      // repeated .com.randioo.mahjong_public_server.protocol.GameRoleData gameRoleData = 2;
      public java.util.List<com.randioo.mahjong_public_server.protocol.Entity.GameRoleData> getGameRoleDataList() {
        return java.util.Collections.unmodifiableList(result.gameRoleData_);
      }
      public int getGameRoleDataCount() {
        return result.getGameRoleDataCount();
      }
      public com.randioo.mahjong_public_server.protocol.Entity.GameRoleData getGameRoleData(int index) {
        return result.getGameRoleData(index);
      }
      public Builder setGameRoleData(int index, com.randioo.mahjong_public_server.protocol.Entity.GameRoleData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.gameRoleData_.set(index, value);
        return this;
      }
      public Builder setGameRoleData(int index, com.randioo.mahjong_public_server.protocol.Entity.GameRoleData.Builder builderForValue) {
        result.gameRoleData_.set(index, builderForValue.build());
        return this;
      }
      public Builder addGameRoleData(com.randioo.mahjong_public_server.protocol.Entity.GameRoleData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.gameRoleData_.isEmpty()) {
          result.gameRoleData_ = new java.util.ArrayList<com.randioo.mahjong_public_server.protocol.Entity.GameRoleData>();
        }
        result.gameRoleData_.add(value);
        return this;
      }
      public Builder addGameRoleData(com.randioo.mahjong_public_server.protocol.Entity.GameRoleData.Builder builderForValue) {
        if (result.gameRoleData_.isEmpty()) {
          result.gameRoleData_ = new java.util.ArrayList<com.randioo.mahjong_public_server.protocol.Entity.GameRoleData>();
        }
        result.gameRoleData_.add(builderForValue.build());
        return this;
      }
      public Builder addAllGameRoleData(
          java.lang.Iterable<? extends com.randioo.mahjong_public_server.protocol.Entity.GameRoleData> values) {
        if (result.gameRoleData_.isEmpty()) {
          result.gameRoleData_ = new java.util.ArrayList<com.randioo.mahjong_public_server.protocol.Entity.GameRoleData>();
        }
        super.addAll(values, result.gameRoleData_);
        return this;
      }
      public Builder clearGameRoleData() {
        result.gameRoleData_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.mahjong_public_server.protocol.GameData)
    }
    
    static {
      defaultInstance = new GameData(true);
      com.randioo.mahjong_public_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.mahjong_public_server.protocol.GameData)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_RoleData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_RoleData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_GameConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_GameConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_PaiNum_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_PaiNum_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_Record_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_Record_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_GameRoleData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_GameRoleData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_CallGangData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_CallGangData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_GangData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_GangData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_CallPengData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_CallPengData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_PengData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_PengData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_CallHuData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_CallHuData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_HuData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_HuData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_CallChiData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_CallChiData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_ChiData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_ChiData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_GameOverData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_GameOverData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_RecommandPai_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_RecommandPai_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_Score_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_Score_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_mahjong_public_server_protocol_GameData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_mahjong_public_server_protocol_GameData_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014Entity.proto\022*com.randioo.mahjong_publ" +
      "ic_server.protocol\"*\n\010RoleData\022\016\n\006roleId" +
      "\030\001 \001(\005\022\016\n\006gameId\030\002 \001(\005\"\267\001\n\nGameConfig\022\020\n" +
      "\010raceType\030\001 \001(\005\022\020\n\010maxCount\030\002 \001(\005\022\021\n\tgan" +
      "gScore\030\003 \001(\005\022\016\n\006zhuahu\030\004 \001(\010\022\025\n\rendCatch" +
      "Count\030\005 \001(\005\022\022\n\ncatchScore\030\006 \001(\005\022\017\n\007gangk" +
      "ai\030\007 \001(\010\022\025\n\rminStartScore\030\010 \001(\005\022\017\n\007endTi" +
      "me\030\t \001(\t\"#\n\006PaiNum\022\014\n\004seat\030\001 \001(\005\022\013\n\003num\030" +
      "\003 \001(\005\"#\n\006Record\022\014\n\004seat\030\001 \001(\005\022\013\n\003pai\030\002 \003" +
      "(\005\"p\n\014GameRoleData\022\022\n\ngameRoleId\030\001 \001(\t\022\014",
      "\n\004name\030\002 \001(\t\022\014\n\004seat\030\003 \001(\005\022\r\n\005ready\030\004 \001(" +
      "\010\022\022\n\nheadImgUrl\030\005 \001(\t\022\r\n\005money\030\006 \001(\005\"f\n\014" +
      "CallGangData\022\016\n\006callId\030\001 \001(\005\022F\n\010gangData" +
      "\030\002 \001(\01324.com.randioo.mahjong_public_serv" +
      "er.protocol.GangData\"\030\n\010GangData\022\014\n\004card" +
      "\030\002 \003(\005\"f\n\014CallPengData\022\016\n\006callId\030\001 \001(\005\022F" +
      "\n\010pengData\030\002 \001(\01324.com.randioo.mahjong_p" +
      "ublic_server.protocol.PengData\",\n\010PengDa" +
      "ta\022\022\n\ntargetSeat\030\001 \001(\005\022\014\n\004card\030\002 \001(\005\"`\n\n" +
      "CallHuData\022\016\n\006callId\030\001 \001(\005\022B\n\006huData\030\002 \001",
      "(\01322.com.randioo.mahjong_public_server.p" +
      "rotocol.HuData\"\026\n\006HuData\022\014\n\004card\030\002 \003(\005\"c" +
      "\n\013CallChiData\022\016\n\006callId\030\001 \001(\005\022D\n\007chiData" +
      "\030\002 \001(\01323.com.randioo.mahjong_public_serv" +
      "er.protocol.ChiData\"6\n\007ChiData\022\r\n\005card1\030" +
      "\002 \001(\005\022\r\n\005card2\030\003 \001(\005\022\r\n\005card3\030\004 \001(\005\"S\n\014G" +
      "ameOverData\022\014\n\004name\030\001 \001(\t\022\023\n\013landLordNum" +
      "\030\002 \001(\005\022\021\n\tfarmerNum\030\003 \001(\005\022\r\n\005score\030\004 \001(\005" +
      "\"\033\n\014RecommandPai\022\013\n\003pai\030\001 \003(\005\"6\n\005Score\022\014" +
      "\n\004name\030\001 \001(\t\022\r\n\005score\030\002 \001(\005\022\020\n\010allScore\030",
      "\003 \001(\005\"j\n\010GameData\022\016\n\006gameId\030\001 \001(\005\022N\n\014gam" +
      "eRoleData\030\002 \003(\01328.com.randioo.mahjong_pu" +
      "blic_server.protocol.GameRoleData*5\n\010Gam" +
      "eType\022\023\n\017GAME_TYPE_MATCH\020\001\022\024\n\020GAME_TYPE_" +
      "FRIEND\020\002*M\n\tGameState\022\026\n\022GAME_STATE_PREP" +
      "ARE\020\001\022\024\n\020GAME_START_START\020\002\022\022\n\016GAME_STAR" +
      "T_END\020\003"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_randioo_mahjong_public_server_protocol_RoleData_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_randioo_mahjong_public_server_protocol_RoleData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_RoleData_descriptor,
              new java.lang.String[] { "RoleId", "GameId", },
              com.randioo.mahjong_public_server.protocol.Entity.RoleData.class,
              com.randioo.mahjong_public_server.protocol.Entity.RoleData.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_GameConfig_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_randioo_mahjong_public_server_protocol_GameConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_GameConfig_descriptor,
              new java.lang.String[] { "RaceType", "MaxCount", "GangScore", "Zhuahu", "EndCatchCount", "CatchScore", "Gangkai", "MinStartScore", "EndTime", },
              com.randioo.mahjong_public_server.protocol.Entity.GameConfig.class,
              com.randioo.mahjong_public_server.protocol.Entity.GameConfig.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_PaiNum_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_randioo_mahjong_public_server_protocol_PaiNum_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_PaiNum_descriptor,
              new java.lang.String[] { "Seat", "Num", },
              com.randioo.mahjong_public_server.protocol.Entity.PaiNum.class,
              com.randioo.mahjong_public_server.protocol.Entity.PaiNum.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_Record_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_randioo_mahjong_public_server_protocol_Record_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_Record_descriptor,
              new java.lang.String[] { "Seat", "Pai", },
              com.randioo.mahjong_public_server.protocol.Entity.Record.class,
              com.randioo.mahjong_public_server.protocol.Entity.Record.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_GameRoleData_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_com_randioo_mahjong_public_server_protocol_GameRoleData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_GameRoleData_descriptor,
              new java.lang.String[] { "GameRoleId", "Name", "Seat", "Ready", "HeadImgUrl", "Money", },
              com.randioo.mahjong_public_server.protocol.Entity.GameRoleData.class,
              com.randioo.mahjong_public_server.protocol.Entity.GameRoleData.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_CallGangData_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_com_randioo_mahjong_public_server_protocol_CallGangData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_CallGangData_descriptor,
              new java.lang.String[] { "CallId", "GangData", },
              com.randioo.mahjong_public_server.protocol.Entity.CallGangData.class,
              com.randioo.mahjong_public_server.protocol.Entity.CallGangData.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_GangData_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_com_randioo_mahjong_public_server_protocol_GangData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_GangData_descriptor,
              new java.lang.String[] { "Card", },
              com.randioo.mahjong_public_server.protocol.Entity.GangData.class,
              com.randioo.mahjong_public_server.protocol.Entity.GangData.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_CallPengData_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_com_randioo_mahjong_public_server_protocol_CallPengData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_CallPengData_descriptor,
              new java.lang.String[] { "CallId", "PengData", },
              com.randioo.mahjong_public_server.protocol.Entity.CallPengData.class,
              com.randioo.mahjong_public_server.protocol.Entity.CallPengData.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_PengData_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_com_randioo_mahjong_public_server_protocol_PengData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_PengData_descriptor,
              new java.lang.String[] { "TargetSeat", "Card", },
              com.randioo.mahjong_public_server.protocol.Entity.PengData.class,
              com.randioo.mahjong_public_server.protocol.Entity.PengData.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_CallHuData_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_com_randioo_mahjong_public_server_protocol_CallHuData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_CallHuData_descriptor,
              new java.lang.String[] { "CallId", "HuData", },
              com.randioo.mahjong_public_server.protocol.Entity.CallHuData.class,
              com.randioo.mahjong_public_server.protocol.Entity.CallHuData.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_HuData_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_com_randioo_mahjong_public_server_protocol_HuData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_HuData_descriptor,
              new java.lang.String[] { "Card", },
              com.randioo.mahjong_public_server.protocol.Entity.HuData.class,
              com.randioo.mahjong_public_server.protocol.Entity.HuData.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_CallChiData_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_com_randioo_mahjong_public_server_protocol_CallChiData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_CallChiData_descriptor,
              new java.lang.String[] { "CallId", "ChiData", },
              com.randioo.mahjong_public_server.protocol.Entity.CallChiData.class,
              com.randioo.mahjong_public_server.protocol.Entity.CallChiData.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_ChiData_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_com_randioo_mahjong_public_server_protocol_ChiData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_ChiData_descriptor,
              new java.lang.String[] { "Card1", "Card2", "Card3", },
              com.randioo.mahjong_public_server.protocol.Entity.ChiData.class,
              com.randioo.mahjong_public_server.protocol.Entity.ChiData.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_GameOverData_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_com_randioo_mahjong_public_server_protocol_GameOverData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_GameOverData_descriptor,
              new java.lang.String[] { "Name", "LandLordNum", "FarmerNum", "Score", },
              com.randioo.mahjong_public_server.protocol.Entity.GameOverData.class,
              com.randioo.mahjong_public_server.protocol.Entity.GameOverData.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_RecommandPai_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_com_randioo_mahjong_public_server_protocol_RecommandPai_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_RecommandPai_descriptor,
              new java.lang.String[] { "Pai", },
              com.randioo.mahjong_public_server.protocol.Entity.RecommandPai.class,
              com.randioo.mahjong_public_server.protocol.Entity.RecommandPai.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_Score_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_com_randioo_mahjong_public_server_protocol_Score_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_Score_descriptor,
              new java.lang.String[] { "Name", "Score", "AllScore", },
              com.randioo.mahjong_public_server.protocol.Entity.Score.class,
              com.randioo.mahjong_public_server.protocol.Entity.Score.Builder.class);
          internal_static_com_randioo_mahjong_public_server_protocol_GameData_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_com_randioo_mahjong_public_server_protocol_GameData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_mahjong_public_server_protocol_GameData_descriptor,
              new java.lang.String[] { "GameId", "GameRoleData", },
              com.randioo.mahjong_public_server.protocol.Entity.GameData.class,
              com.randioo.mahjong_public_server.protocol.Entity.GameData.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
