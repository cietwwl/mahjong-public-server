package com.randioo.mahjong_public_server.protocol;

message RoleData{
	optional int32 roleId = 1;
	optional int32 gameId = 2;
	optional int32 point = 3;
	optional int32 sex = 4;

	/*optional string name = 2;
	optional int32 money = 3;
	optional int32 volume = 4;
	optional int32 musicVolume = 5;
	optional string headImgUrl = 6;
	optional int32 randiooMoney = 7;*/
}

message GameConfigData{
	optional int32 raceType = 1;
	optional int32 maxCount = 2;
	optional int32 gangScore = 3;
	optional bool zhuahu = 4;
	optional int32 endCatchCount = 5;
	optional int32 catchScore = 6;
	optional bool gangkai = 7;
	optional int32 minStartScore = 8;
	optional string endTime = 9;
}
message PaiNum{
	optional int32 seat = 1;
	optional int32 num = 3;
}

message Record{
	optional int32 seat = 1;
	repeated int32 pai = 2;
}

enum GameType{
	GAME_TYPE_MATCH = 1;
	GAME_TYPE_FRIEND = 2;
}

message GameRoleData{
	optional string gameRoleId = 1;
	optional string name = 2;
	optional int32 seat = 3;
	optional bool ready = 4;
	optional string headImgUrl = 5;
	optional int32 money = 6;
	optional int32 point = 7;
	optional int32 sex = 8;
}

enum GameState{
	GAME_STATE_PREPARE = 1;
	GAME_START_START = 2;
	GAME_START_END = 3;
}

message CallCardListData{
	optional int32 callId = 1;
	optional CardListData cardListData = 2;
}

message CardListData{
	optional CardListType cardListType = 1;
	optional int32 card = 2;
	optional int32 targetSeat = 3;
	optional int32 targetCard = 4;
}

enum CardListType{
	CARD_LIST_TYPE_CHI = 1;
	CARD_LIST_TYPE_PENG = 2;
	CARD_LIST_TYPE_GANG_LIGHT = 3;
	CARD_LIST_TYPE_GANG_DARK = 4;
	CARD_LIST_TYPE_GANG_ADD = 5;
}

message CallHuData{
	optional int32 callId = 1;
	optional RoundCardsData huData = 2;
}

message RoleRoundOverInfoData{
	optional GameRoleData gameRoleData = 1;
	optional RoundCardsData roundCardsData = 2;
	optional int32 minScore = 3;
	optional bool gangKai = 4;
	repeated int32 flyCards = 5;
	optional OverMethod overMethod = 6;
	optional int32 roundScore = 7;
}

enum OverMethod{
	OVER_LOSS = 0;
	OVER_CHONG = 1;
	OVER_MO_HU =2;
	OVER_HU = 3;
}

message RoleGameOverInfoData{
	optional GameRoleData gameRoleData = 1;
	optional int32 huCount = 2;
	optional int32 moHuCount = 3;
	optional int32 zhuaHuCount = 4;
	optional int32 dianChongCount = 5;
	optional int32 gameScore = 6;
}

message RoundCardsData{	
	optional int32 huCard = 1;
	repeated int32 handCards = 2;	
	optional int32 touchCard = 3;
	optional int32 targetSeat = 4;
	repeated CardListData cardListData = 5;
}

message RecommandPai{
	repeated int32 pai = 1; 
}

message GameData{
	optional int32 gameId = 1;
	repeated GameRoleData gameRoleData = 2;
}
