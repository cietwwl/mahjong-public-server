package com.randioo.mahjong_public_server.protocol;

import "Entity.proto";


message FightExitGameRequest{//
	
}

message FightExitGameResponse{//
	optional int32 errorCode = 1 [default = 1];
}


message SCFightExitGame{//
	optional int32 seat = 1;
}

message SCFightApplyExitGame{//
	optional string name = 1;
	optional int32 countDown = 2;
}

message FightAgreeExitGameRequest{//
	optional bool agree = 1[default = true];
}

message FightAgreeExitGameResponse{//
	optional int32 errorCode = 1 [default = 1];
}

message SCAgreeExitGame{//
	optional string name = 1;
}

message SCFightGameDismiss{//
	
}

message SCFightLoadResource{
	
}

message FightReadyRequest{//
}

message FightReadyResponse{//
	optional int32 errorCode = 1[default = 1];
}

message SCFightNoticeReady{
}

message SCFightReady{//
	optional int32 seat = 1;
}


message FightGetlastRoundRequest{
}

message FightGetlastRoundResponse{
	optional int32 errorCode = 1 [default = 1];
	repeated Record records = 2;
}

message FightRejoinRequest{
}

message FightRejoinResponse{
	repeated int32 pai = 1;
	repeated int32 landLordPai = 2;
	optional string roomId = 3;
	optional bool moguai = 4;
	optional int32 seat = 5;
}

message FightRecommandRequest{
}

message FightRecommandResponse{
	optional int32 errorCode = 1 [default = 1];
	repeated RecommandPai recommandPai = 2;
}

message SCFightStart{//
	repeated int32 pai = 1;
	optional int32 times = 2;	
	repeated PaiNum PaiNum = 3;
	optional int32 remainCardCount = 4;
	optional int32 zhuangSeat = 5;
}

message SCFightRoundOver{
	optional int32 di = 1;
	optional int32 bomb = 2;
	optional bool spring = 3;
	optional bool moguai = 4;
	optional bool mingpai = 5;
	repeated Score score = 6;
	optional bool over = 7;
}
message SCFightGameOver{	
	
	repeated GameOverData gameOverData = 1;
}

message SCFightNoticeSendCard{
	optional int32 seat = 1;
}

message FightSendCardRequest{
	optional int32 card = 1;
	optional bool isTouchCard = 2[default=false];
}

message FightSendCardResponse{//
	optional int32 errorCode = 1 [default = 1];
}
message SCFightSendCard{
	optional int32 card = 1;
	optional int32 seat = 2;
	optional bool isTouchCard = 3;
}

message SCFightTouchCard{
	optional int32 seat = 1;
	optional int32 touchCard = 2;
	optional int32 remainCardCount = 3;
}

message SCFightNoticeChooseCardList{
	repeated CallHuData callHuData = 1;
	optional CallGangData callGangData = 2;
	optional CallPengData callPengData = 3;
	repeated CallChiData callChiData = 4;
	optional int32 seat = 5;
	optional int32 tempGameCount = 6;
}

message SCFightCountdown{
	optional int32 countdown = 1;
}

message FightPengRequest{
	optional int32 tempGameCount = 1;
	optional int32 callCardListId = 2;
}

message FightPengResponse{
	optional int32 errorCode = 1[default = 1];	
}

message SCFightPeng{
	optional int32 seat = 1;
	optional PengData pengData = 2;
}

message FightGangRequest{
	optional int32 tempGameCount = 1;
	optional int32 callCardListId = 2;
}

message FightGangResponse{
	optional int32 errorCode = 1[default = 1];
}

message SCFightGang{
	optional int32 seat = 1;
	optional GangData gangData = 2;
}

message FightHuRequest{
	optional int32 tempGameCount = 1;
	optional int32 callCardListId = 2;
}

message FightHuResponse{
	optional int32 errorCode = 1[default=1];
}

message SCFightHu{
	optional int32 seat = 1;
}

message FightGuoRequest{
	optional int32 tempGameCount = 1;
}

message FightGuoResponse{
	optional int32 errorCode = 1[default = 1];
}

message SCFightGuo{
	optional int32 seat = 1;
}

